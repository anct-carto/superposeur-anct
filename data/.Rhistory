layer = "com")
geom_com_polygon <- st_read("N://Transverse/Donnees_Obs/Donnees_SIG/ADMIN_STAT/map-process/public/france/2023/fr-drom/fr-drom-3395-gen.gpkg",
layer = "com")
#ACV
acv_init <- read.csv("N:/Transverse/Donnees_Obs/Donnees_Statistiques/ANCT/action-coeur-de-ville/liste-acv-com2023-20230802.csv", fileEncoding ="utf-8" )
#Cité éducative
citeduc_init <- read.csv("N:/Transverse/Donnees_Obs/Donnees_Statistiques/ANCT/cites-educatives/liste-cite-com2023-20230817.csv", fileEncoding ="utf-8")
citeduc_list_init<- read.csv("N:/Transverse/Donnees_Obs/Donnees_Statistiques/ANCT/cites-educatives/liste-cite-20230817.csv", fileEncoding ="utf-8")
#TRANSFORMER LES DONNEES - creation d'une fonction-------------------------------------------------------
ma_fonction<- function(data_init, type){
fichier_init <- deparse(substitute(data_init))
if (type == "ctr") {
geom_com <- geom_com_ctr
} else if (type == "polygon") {
geom_com <- geom_com_polygon
} else {
stop("Le paramètre 'type' doit être soit 'ctr' ou 'polygon'")
}
fichier<- data_init%>%
left_join(geom_com, by ="insee_com") %>%
st_as_sf()
fichier_4326<- st_transform(fichier, crs= 4326)
return(fichier_4326)
}
#ACV
acv_geom<-ma_fonction(acv_init, type="ctr")%>%
rename("id_geo"="insee_com", "lib_geo"="lib_com.y" ,"id_territoire"="id_acv", "lib_territoire"="lib_acv")%>%
select(id_geo, lib_geo, id_territoire, lib_territoire, date_signature)%>%
group_by(id_territoire, lib_territoire, date_signature)%>%
summarise(liste_geo= paste0(unique(lib_geo),' (', id_geo, ')', collapse = '; '))
View(acv_geom)
#Cité educatives
cite_init <- read.csv("N:/Transverse/Donnees_Obs/Donnees_Statistiques/ANCT/cites-educatives/liste-cite-com2023-20230817.csv", fileEncoding ="utf-8")
View(cite_init)
#Telecharger les librairie
library(sf)
library(rgdal)
library(tidyverse)
library(readxl)
library(writexl)
library(RSQLite)
library(here)
geom_com_ctr <- st_read("N://Transverse/Donnees_Obs/Donnees_SIG/ADMIN_STAT/map-process/public/france/2023/fr-drom/centroide-fr-drom-3395-gen.gpkg",
layer = "com")
geom_com_polygon <- st_read("N://Transverse/Donnees_Obs/Donnees_SIG/ADMIN_STAT/map-process/public/france/2023/fr-drom/fr-drom-3395-gen.gpkg",
layer = "com")
#France service
fs_init <- read.csv("N:/Transverse/Donnees_Obs/Donnees_Statistiques/ANCT/france_services/liste-fs-20231106.csv", fileEncoding ="utf-8")
View(fs_init)
#TRANSFORMER LES DONNEES - creation d'une fonction-------------------------------------------------------
ma_fonction<- function(data_init, type){
fichier_init <- deparse(substitute(data_init))
if (type == "ctr") {
geom_com <- geom_com_ctr
} else if (type == "polygon") {
geom_com <- geom_com_polygon
} else {
stop("Le paramètre 'type' doit être soit 'ctr' ou 'polygon'")
}
fichier<- data_init%>%
left_join(geom_com, by ="insee_com") %>%
st_as_sf()
fichier_4326<- st_transform(fichier, crs= 4326)
return(fichier_4326)
}
#ACV
acv_init <- read.csv("N:/Transverse/Donnees_Obs/Donnees_Statistiques/ANCT/action-coeur-de-ville/liste-acv-com2023-20230802.csv", fileEncoding ="utf-8" )
#ACV
acv_geom<-ma_fonction(acv_init, type="ctr")%>%
rename("id_geo"="insee_com", "lib_geo"="lib_com.y" ,"id_territoire"="id_acv", "lib_territoire"="lib_acv")%>%
select(id_geo, lib_geo, id_territoire, lib_territoire, date_signature)%>%
group_by(id_territoire, lib_territoire, date_signature)%>%
summarise(liste_geo= paste0(unique(lib_geo),' (', id_geo, ')', collapse = '; '))
View(acv_geom)
View(acv_init)
fs_geom<-ma_fonction(fs_init, type="ctr")%>%
rename("id_geo"="insee_com", "lib_geo"="lib_com.y" ,"id_territoire"="id_fs", "lib_territoire"="lib_fs")%>%
select(id_geo, lib_geo, id_territoire, lib_territoire)
View(fs_geom)
#FS
fs_geom<-ma_fonction(fs_init, type="ctr")%>%
rename("id_geo"="insee_com", "lib_geo"="lib_com.y" ,"id_territoire"="id_fs", "lib_territoire"="lib_fs")%>%
select(id_geo, lib_geo, id_territoire, lib_territoire)%>%
group_by(id_geo)%>%
summarise(lib_geo= paste0(unique(lib_geo)),
liste_geo= paste0(unique(lib_territoire),' (', id_territoire2, ')', collapse = '; '))
#FS
fs_geom<-ma_fonction(fs_init, type="ctr")%>%
rename("id_geo"="insee_com", "lib_geo"="lib_com.y" ,"id_territoire"="id_fs", "lib_territoire"="lib_fs")%>%
select(id_geo, lib_geo, id_territoire, lib_territoire)%>%
group_by(id_geo)%>%
summarise(lib_geo= paste0(unique(lib_geo)),
liste_geo= paste0(unique(lib_territoire),' (', id_territoire, ')', collapse = '; '))
fs_com_init <- read.csv("N:/Transverse/Donnees_Obs/Donnees_Statistiques/ANCT/france_services/liste-fs-com2023-20231106.csv", fileEncoding ="utf-8")
View(fs_com_init)
View(fs_com_init)
#FS
fs_geom<-ma_fonction(fs_init, type="ctr")%>%
rename("id_geo"="insee_com", "lib_geo"="lib_com.y" ,"id_territoire"="id_fs", "lib_territoire"="lib_fs")%>%
select(id_geo, lib_geo, id_territoire, lib_territoire)
#FS
fs_geom<-ma_fonction(fs_com_init, type="ctr")%>%
rename("id_geo"="insee_com", "lib_geo"="lib_com.y" ,"id_territoire"="id_fs", "lib_territoire"="lib_fs")%>%
select(id_geo, lib_geo, id_territoire, lib_territoire)%>%
group_by(id_geo)%>%
summarise(lib_geo= paste0(unique(lib_geo)),
liste_geo= paste0(unique(lib_territoire),' (', id_territoire, ')', collapse = '; '))
#FS
fs_geom<-ma_fonction(fs_com_init, type="ctr")%>%
rename("id_geo"="insee_com", "lib_geo"="lib_com.y" ,"id_territoire"="id_fs", "lib_territoire"="lib_fs")%>%
select(id_geo, lib_geo, id_territoire, lib_territoire)%>%
group_by(id_geo)%>%
summarise(lib_geo= paste0(unique(lib_geo)),
liste_geo= paste0(unique(lib_territoire),' (', unique(id_territoire), ')', collapse = '; '))
View(fs_geom)
#FS
fs_geom<-ma_fonction(fs_com_init, type="ctr")%>%
rename("id_geo"="insee_com", "lib_geo"="lib_com.y" ,"id_territoire"="id_fs", "lib_territoire"="lib_fs")%>%
select(id_geo, lib_geo, id_territoire, lib_territoire)%>%
group_by(id_geo)%>%
summarise(lib_geo= paste0(unique(lib_geo)),
liste_geo = paste0(unique(lib_territoire), ' (', unique(id_territoire), ')', collapse = '; '))
#FS
fs_geom<-ma_fonction(fs_com_init, type="ctr")%>%
rename("id_geo"="insee_com", "lib_geo"="lib_com.y" ,"id_territoire"="id_fs", "lib_territoire"="lib_fs")%>%
select(id_geo, lib_geo, id_territoire, lib_territoire)%>%
group_by(id_geo)%>%
summarise(lib_geo= paste0(unique(lib_geo)),
liste_geo= paste(unique(lib_territoire),' (', unique(id_territoire), ')', collapse = '; '))
#FS
fs_geom<-ma_fonction(fs_com_init, type="ctr")%>%
rename("id_geo"="insee_com", "lib_geo"="lib_com.y" ,"id_territoire"="id_fs", "lib_territoire"="lib_fs")%>%
select(id_geo, lib_geo, id_territoire, lib_territoire)%>%
group_by(id_geo)%>%
summarise(lib_geo= paste0(unique(lib_geo)),
liste_geo= paste0(unique(lib_territoire),' (', unique(id_territoire), ')', collapse = '; '))
#FS
fs_geom<-ma_fonction(fs_com_init, type="ctr")%>%
rename("id_geo"="insee_com", "lib_geo"="lib_com.y" ,"id_territoire"="id_fs", "lib_territoire"="lib_fs")%>%
select(id_geo, lib_geo, id_territoire, lib_territoire)%>%
group_by(id_geo)%>%
summarise(lib_geo= paste0(unique(lib_geo)),
liste_geo= paste0(unique(lib_territoire), collapse = '; '))
View(fs_init)
#FS
fs_geom<-ma_fonction(fs_com_init, type="ctr")%>%
filter(format_fs='Site principal')%>%
rename("id_geo"="insee_com", "lib_geo"="lib_com.y" ,"id_territoire"="id_fs", "lib_territoire"="lib_fs")%>%
select(id_geo, lib_geo, id_territoire, lib_territoire)%>%
group_by(id_geo)%>%
summarise(lib_geo= paste0(unique(lib_geo)),
liste_geo= paste0(unique(lib_territoire), collapse = '; '))
#FS
fs_geom<-ma_fonction(fs_com_init, type="ctr")%>%
filter(format_fs=='Site principal')%>%
rename("id_geo"="insee_com", "lib_geo"="lib_com.y" ,"id_territoire"="id_fs", "lib_territoire"="lib_fs")%>%
select(id_geo, lib_geo, id_territoire, lib_territoire)
fs_geom<-ma_fonction(fs_com_init, type="ctr")%>%
filter(format_fs=='Site principal')
fs_geom<-ma_fonction(fs_com_init, type="ctr")
View(fs_com_init)
fs_geom<-filter(fs_init,format_fs=='Site principal')
View(fs_init)
fs_geom<-filter(fs_com_init,format_fs=='Site principal')
View(fs_com_init)
fs_geom<-filter(fs_init,format_fs=='Site principal')
View(fs_geom)
fs_geom<-filter(fs_init,format_fs=='Site principal')%>%
ma_fonction(fs_init, type="ctr")%>%
rename("id_geo"="insee_com", "lib_geo"="lib_com.y" ,"id_territoire"="id_fs", "lib_territoire"="lib_fs")%>%
select(id_geo, lib_geo, id_territoire, lib_territoire)
fs_geom<-filter(fs_init,format_fs=='Site principal')%>%
ma_fonction(., type="ctr")%>%
rename("id_geo"="insee_com", "lib_geo"="lib_com.y" ,"id_territoire"="id_fs", "lib_territoire"="lib_fs")%>%
select(id_geo, lib_geo, id_territoire, lib_territoire)
#FS
fs_geom<-filter(fs_init,format_fs=='Site principal')%>%
ma_fonction(., type="ctr")%>%
rename("id_geo"="insee_com", "lib_geo"="lib_com.y" ,"id_territoire"="id_fs", "lib_territoire"="lib_fs")%>%
select(id_geo, lib_geo, id_territoire, lib_territoire)%>%
group_by(id_geo)%>%
summarise(lib_geo= paste0(unique(lib_geo)),
liste_geo= paste0(unique(lib_territoire),' (', id_territoire, ')', collapse = '; '))
#FS
fs_geom<-filter(fs_init,format_fs=='Site principal')%>%
ma_fonction(., type="ctr")%>%
rename("id_geo"="insee_com", "lib_geo"="lib_com.y" ,"id_territoire"="id_fs", "lib_territoire"="lib_fs")%>%
select(id_geo, lib_geo, id_territoire, lib_territoire)%>%
group_by(id_geo)%>%
summarise(lib_geo= paste0(unique(lib_geo)),
liste_geo= paste0(unique(lib_territoire), collapse = '; '))
#FS
fs_geom<-filter(fs_init,format_fs=='Site principal')%>%
ma_fonction(., type="ctr")%>%
rename("id_geo"="insee_com", "lib_geo"="lib_com.y" ,"id_territoire"="id_fs", "lib_territoire"="lib_fs")%>%
select(id_geo, lib_geo, id_territoire, lib_territoire)%>%
group_by(id_geo)%>%
summarise(lib_geo= paste0(unique(lib_geo)),
liste_geo= lib_geo,
lib_geo= paste0(unique(lib_territoire), collapse = '; '))
#FS
fs_geom<-filter(fs_init,format_fs=='Site principal')%>%
ma_fonction(., type="ctr")%>%
rename("id_geo"="insee_com", "lib_geo"="lib_com.y" ,"id_territoire"="id_fs", "lib_territoire"="lib_fs")%>%
select(id_geo, lib_geo, id_territoire, lib_territoire)%>%
group_by(id_geo)%>%
summarise(lib_geo= paste0(unique(lib_geo)),
liste_geo= paste0(unique(lib_geo), collapse = '; '),
lib_geo= paste0(unique(lib_territoire),' (', id_geo, ')', collapse = '; '))
#FS
fs_geom<-filter(fs_init,format_fs=='Site principal')%>%
ma_fonction(., type="ctr")%>%
rename("id_geo"="insee_com", "lib_geo"="lib_com.y" ,"id_territoire"="id_fs", "lib_territoire"="lib_fs")%>%
select(id_geo, lib_geo, id_territoire, lib_territoire)%>%
group_by(id_geo)%>%
summarise(lib_geo= paste0(unique(lib_geo)),
liste_geo= paste0(unique(lib_geo), ' (', id_geo, ')',collapse = '; '),
lib_geo= paste0(unique(lib_territoire), collapse = '; '))
st_write(obj = fs_geom,
dsn = here(paste0("geom/geojsonV2/fs_geom.geojson")),
driver = "GeoJSON", delete_layer = TRUE, append = FALSE)
st_write(obj = fs_geom,
dsn = here(paste0("geom/geojsonV2/fs_geom.geojson")),
driver = "GeoJSON", delete_layer = TRUE, append = FALSE)
#Telecharger les librairie
library(sf)
library(rgdal)
library(tidyverse)
library(readxl)
library(writexl)
library(RSQLite)
library(here)
geom_com_ctr <- st_read("N://Transverse/Donnees_Obs/Donnees_SIG/ADMIN_STAT/map-process/public/france/2023/fr-drom/centroide-fr-drom-3395-gen.gpkg",
layer = "com")
geom_com_polygon <- st_read("N://Transverse/Donnees_Obs/Donnees_SIG/ADMIN_STAT/map-process/public/france/2023/fr-drom/fr-drom-3395-gen.gpkg",
layer = "com")
geom_epci_polygon <- st_read("N://Transverse/Donnees_Obs/Donnees_SIG/ADMIN_STAT/map-process/public/france/2023/fr-drom/fr-drom-3395-gen.gpkg",
layer = "epci")
#France service
fs_init <- read.csv("N:/Transverse/Donnees_Obs/Donnees_Statistiques/ANCT/france_services/liste-fs-20231106.csv", fileEncoding ="utf-8")
fs_com_init <- read.csv("N:/Transverse/Donnees_Obs/Donnees_Statistiques/ANCT/france_services/liste-fs-com2023-20231106.csv", fileEncoding ="utf-8")
#TRANSFORMER LES DONNEES - creation d'une fonction-------------------------------------------------------
ma_fonction<- function(data_init, type){
fichier_init <- deparse(substitute(data_init))
if (type == "ctr") {
geom_com <- geom_com_ctr
} else if (type == "polygon") {
geom_com <- geom_com_polygon
} else {
stop("Le paramètre 'type' doit être soit 'ctr' ou 'polygon'")
}
fichier<- data_init%>%
left_join(geom_com, by ="insee_com") %>%
st_as_sf()
fichier_4326<- st_transform(fichier, crs= 4326)
return(fichier_4326)
}
#FS
fs_geom<-filter(fs_init,format_fs=='Site principal')%>%
ma_fonction(., type="ctr")%>%
rename("id_geo"="insee_com", "lib_geo"="lib_com.y" ,"id_territoire"="id_fs", "lib_territoire"="lib_fs")%>%
select(id_geo, lib_geo, id_territoire, lib_territoire)%>%
group_by(id_geo)%>%
summarise(lib_geo= paste0(unique(lib_geo)),
liste_geo= paste0(unique(lib_geo), ' (', id_geo, ')',collapse = '; '),
lib_geo= paste0(unique(lib_territoire), collapse = '; '))
st_write(obj = fs_geom,
dsn = here(paste0("geom/geojsonV2/fs_geom.geojson")),
driver = "GeoJSON", delete_layer = TRUE, append = FALSE)
View(fs_geom)
#Telecharger les librairie
library(sf)
library(rgdal)
library(tidyverse)
library(readxl)
library(writexl)
library(RSQLite)
library(here)
geom_com_ctr <- st_read("N://Transverse/Donnees_Obs/Donnees_SIG/ADMIN_STAT/map-process/public/france/2023/fr-drom/centroide-fr-drom-3395-gen.gpkg",
layer = "com")
geom_com_polygon <- st_read("N://Transverse/Donnees_Obs/Donnees_SIG/ADMIN_STAT/map-process/public/france/2023/fr-drom/fr-drom-3395-gen.gpkg",
layer = "com")
#France service
fs_init <- read.csv("N:/Transverse/Donnees_Obs/Donnees_Statistiques/ANCT/france_services/liste-fs-20231106.csv", fileEncoding ="utf-8")
fs_com_init <- read.csv("N:/Transverse/Donnees_Obs/Donnees_Statistiques/ANCT/france_services/liste-fs-com2023-20231106.csv", fileEncoding ="utf-8")
#TRANSFORMER LES DONNEES - creation d'une fonction-------------------------------------------------------
ma_fonction<- function(data_init, type){
fichier_init <- deparse(substitute(data_init))
if (type == "ctr") {
geom_com <- geom_com_ctr
} else if (type == "polygon") {
geom_com <- geom_com_polygon
} else {
stop("Le paramètre 'type' doit être soit 'ctr' ou 'polygon'")
}
fichier<- data_init%>%
left_join(geom_com, by ="insee_com") %>%
st_as_sf()
fichier_4326<- st_transform(fichier, crs= 4326)
return(fichier_4326)
}
#FS
fs_geom<-filter(fs_init,format_fs=='Site principal')%>%
ma_fonction(., type="ctr")%>%
rename("id_geo"="insee_com", "lib_geo"="lib_com.y" ,"id_territoire"="id_fs", "lib_territoire"="lib_fs")%>%
select(id_geo, lib_geo, id_territoire, lib_territoire)%>%
group_by(id_geo)%>%
summarise(lib_geo= paste0(unique(lib_geo)),
liste_geo= paste0(unique(lib_geo), ' (', id_geo, ')',collapse = '; '),
lib_geo= paste0(unique(lib_territoire), collapse = '; '))
View(fs_geom)
fs_geom<-filter(fs_init,format_fs=='Site principal')%>%
ma_fonction(., type="ctr")%>%
rename("id_geo"="insee_com", "lib_geo"="lib_com.y" ,"id_territoire"="id_fs", "lib_territoire"="lib_fs")%>%
select(id_geo, lib_geo, id_territoire, lib_territoire)%>%
mutate(id_territoire2= paste0('fs-',id_territoire))
View(fs_geom)
fs_geom<-filter(fs_init,format_fs=='Site principal')%>%
ma_fonction(., type="ctr")%>%
rename("id_geo"="insee_com", "lib_geo"="lib_com.y" ,"id_territoire"="id_fs", "lib_territoire"="lib_fs")%>%
select(id_geo, lib_geo, id_territoire, lib_territoire)%>%
mutate(id_territoire2= paste0('fs-',id_territoire))%>%
select(-id_territoire)%>%
replace('id_territoire'='id_territoire2')
fs_geom<-filter(fs_init,format_fs=='Site principal')%>%
ma_fonction(., type="ctr")%>%
rename("id_geo"="insee_com", "lib_geo"="lib_com.y" ,"id_territoire"="id_fs", "lib_territoire"="lib_fs")%>%
select(id_geo, lib_geo, id_territoire, lib_territoire)%>%
mutate(id_territoire2= paste0('fs-',id_territoire))%>%
select(-id_territoire)
fs_geom<-filter(fs_init,format_fs=='Site principal')%>%
ma_fonction(., type="ctr")%>%
rename("id_geo"="insee_com", "lib_geo"="lib_com.y" ,"id_territoire"="id_fs", "lib_territoire"="lib_fs")%>%
select(id_geo, lib_geo, id_territoire, lib_territoire)%>%
mutate(id_territoire2= paste0('fs-',id_territoire))%>%
select(-id_territoire)%>%
rename('id_territoire'='id_territoire2')
#FS
fs_geom<-filter(fs_init,format_fs=='Site principal')%>%
ma_fonction(., type="ctr")%>%
rename("id_geo"="insee_com", "lib_geo"="lib_com.y" ,"id_territoire"="id_fs", "lib_territoire"="lib_fs")%>%
select(id_geo, lib_geo, id_territoire, lib_territoire)%>%
mutate(id_territoire2= paste0('fs-',id_territoire))%>%
select(-id_territoire)%>%
rename('id_territoire'='id_territoire2')%>%
group_by(id_geo)%>%
summarise(lib_geo= paste0(unique(lib_geo)),
id_territoire= paste0(unique(id_territoire)),
liste_geo= paste0(unique(lib_geo), ' (', id_geo, ')',collapse = '; '),
lib_geo= paste0(unique(lib_territoire), collapse = '; '))
#FS
fs_geom<-filter(fs_init,format_fs=='Site principal')%>%
ma_fonction(., type="ctr")%>%
rename("id_geo"="insee_com", "lib_geo"="lib_com.y" ,"id_territoire"="id_fs", "lib_territoire"="lib_fs")%>%
select(id_geo, lib_geo, id_territoire, lib_territoire)%>%
mutate(id_territoire2= paste0('fs-',id_territoire))%>%
select(-id_territoire)%>%
rename('id_territoire'='id_territoire2')%>%
group_by(id_geo)%>%
summarise(lib_geo= paste0(unique(lib_geo)),
id_territoire= paste0(unique(id_territoire)),
liste_geo= paste0(unique(lib_geo), ' (', id_geo, ')',collapse = '; '),
lib_geo= paste0(unique(lib_territoire), collapse = '; '))
#FS
fs_geom<-filter(fs_init,format_fs=='Site principal')%>%
ma_fonction(., type="ctr")%>%
rename("id_geo"="insee_com", "lib_geo"="lib_com.y" ,"id_territoire"="id_fs", "lib_territoire"="lib_fs")%>%
select(id_geo, lib_geo, id_territoire, lib_territoire)%>%
mutate(id_territoire2= paste0('fs-',id_territoire))%>%
select(-id_territoire)%>%
rename('id_territoire'='id_territoire2')%>%
group_by(id_geo)%>%
summarise(lib_geo= paste0(unique(lib_geo)),
id_territoire= paste0(id_territoire),
liste_geo= paste0(unique(lib_geo), ' (', id_geo, ')',collapse = '; '),
lib_geo= paste0(unique(lib_territoire), collapse = '; '))
fs_geom<-filter(fs_init,format_fs=='Site principal')%>%
ma_fonction(., type="ctr")%>%
rename("id_geo"="insee_com", "lib_geo"="lib_com.y" ,"id_territoire"="id_fs", "lib_territoire"="lib_fs")%>%
select(id_geo, lib_geo, id_territoire, lib_territoire)%>%
mutate(id_territoire2= paste0('fs-',id_territoire))%>%
select(-id_territoire)%>%
rename('id_territoire'='id_territoire2')%>%
group_by(id_geo)
#FS
fs_geom<-filter(fs_init,format_fs=='Site principal')%>%
ma_fonction(., type="ctr")%>%
rename("id_geo"="insee_com", "lib_geo"="lib_com.y" ,"id_territoire"="id_fs", "lib_territoire"="lib_fs")%>%
select(id_geo, lib_geo, id_territoire, lib_territoire)%>%
mutate(id_territoire2= paste0('fs-',id_territoire))%>%
select(-id_territoire)%>%
rename('id_territoire'='id_territoire2')%>%
group_by(id_geo)%>%
summarise(lib_geo= paste0(unique(lib_geo)),
id_territoire= id_territoire,
liste_geo= paste0(unique(lib_geo), ' (', id_geo, ')',collapse = '; '),
lib_geo= paste0(unique(lib_territoire), collapse = '; '))
#FS
fs_geom<-filter(fs_init,format_fs=='Site principal')%>%
ma_fonction(., type="ctr")%>%
rename("id_geo"="insee_com", "lib_geo"="lib_com.y" ,"id_territoire"="id_fs", "lib_territoire"="lib_fs")%>%
select(id_geo, lib_geo, id_territoire, lib_territoire)%>%
mutate(id_territoire2= paste0('fs-',id_territoire))%>%
select(-id_territoire)%>%
rename('id_territoire'='id_territoire2')%>%
group_by(id_geo)%>%
summarise(lib_geo= paste0(unique(lib_geo)),
id_territoire= paste0(unique(id_territoire), collapse = '; '),
liste_geo= paste0(unique(lib_geo), ' (', id_geo, ')',collapse = '; '),
lib_geo= paste0(unique(lib_territoire), collapse = '; '))
st_write(obj = fs_geom,
dsn = here(paste0("geom/geojsonV2/fs_geom.geojson")),
driver = "GeoJSON", delete_layer = TRUE, append = FALSE)
#Telecharger les librairie
library(sf)
library(rgdal)
library(tidyverse)
library(readxl)
library(writexl)
library(RSQLite)
library(here)
geom_com_ctr <- st_read("N://Transverse/Donnees_Obs/Donnees_SIG/ADMIN_STAT/map-process/public/france/2023/fr-drom/centroide-fr-drom-3395-gen.gpkg",
layer = "com")
geom_com_polygon <- st_read("N://Transverse/Donnees_Obs/Donnees_SIG/ADMIN_STAT/map-process/public/france/2023/fr-drom/fr-drom-3395-gen.gpkg",
layer = "com")
#France service
fs_init <- read.csv("N:/Transverse/Donnees_Obs/Donnees_Statistiques/ANCT/france_services/liste-fs-20231106.csv", fileEncoding ="utf-8")
fs_com_init <- read.csv("N:/Transverse/Donnees_Obs/Donnees_Statistiques/ANCT/france_services/liste-fs-com2023-20231106.csv", fileEncoding ="utf-8")
#TRANSFORMER LES DONNEES - creation d'une fonction-------------------------------------------------------
ma_fonction<- function(data_init, type){
fichier_init <- deparse(substitute(data_init))
if (type == "ctr") {
geom_com <- geom_com_ctr
} else if (type == "polygon") {
geom_com <- geom_com_polygon
} else {
stop("Le paramètre 'type' doit être soit 'ctr' ou 'polygon'")
}
fichier<- data_init%>%
left_join(geom_com, by ="insee_com") %>%
st_as_sf()
fichier_4326<- st_transform(fichier, crs= 4326)
return(fichier_4326)
}
#FS
fs_geom<-filter(fs_init,format_fs=='Site principal')%>%
ma_fonction(., type="ctr")%>%
rename("id_geo"="insee_com", "lib_geo"="lib_com.y" ,"id_territoire"="id_fs", "lib_territoire"="lib_fs")%>%
select(id_geo, lib_geo, id_territoire, lib_territoire)%>%
mutate(id_territoire2= paste0('fs-',id_territoire))%>%
select(-id_territoire)%>%
rename('id_territoire'='id_territoire2')%>%
group_by(id_geo)%>%
summarise(lib_geo= paste0(unique(lib_geo)),
id_territoire= paste0(unique(id_territoire), collapse = '; '),
liste_geo= paste0(unique(lib_geo), ' (', id_geo, ')',collapse = '; '),
lib_territoire= paste0(unique(lib_territoire), collapse = '; '))
View(fs_geom)
st_write(obj = fs_geom,
dsn = here(paste0("geom/geojsonV2/fs_geom.geojson")),
driver = "GeoJSON", delete_layer = TRUE, append = FALSE)
st_write(obj = fs_geom,
dsn = here(paste0("geom/geojsonV2/fs_geom.geojson")),
driver = "GeoJSON", delete_layer = TRUE, append = FALSE)
#Telecharger les librairie
library(sf)
library(rgdal)
library(tidyverse)
library(readxl)
library(writexl)
library(RSQLite)
library(here)
geom_com_ctr <- st_read("N://Transverse/Donnees_Obs/Donnees_SIG/ADMIN_STAT/map-process/public/france/2023/fr-drom/centroide-fr-drom-3395-gen.gpkg",
layer = "com")
geom_com_polygon <- st_read("N://Transverse/Donnees_Obs/Donnees_SIG/ADMIN_STAT/map-process/public/france/2023/fr-drom/fr-drom-3395-gen.gpkg",
layer = "com")
#France service
fs_init <- read.csv("N:/Transverse/Donnees_Obs/Donnees_Statistiques/ANCT/france_services/liste-fs-20231106.csv", fileEncoding ="utf-8")
fs_com_init <- read.csv("N:/Transverse/Donnees_Obs/Donnees_Statistiques/ANCT/france_services/liste-fs-com2023-20231106.csv", fileEncoding ="utf-8")
#TRANSFORMER LES DONNEES - creation d'une fonction-------------------------------------------------------
ma_fonction<- function(data_init, type){
fichier_init <- deparse(substitute(data_init))
if (type == "ctr") {
geom_com <- geom_com_ctr
} else if (type == "polygon") {
geom_com <- geom_com_polygon
} else {
stop("Le paramètre 'type' doit être soit 'ctr' ou 'polygon'")
}
fichier<- data_init%>%
left_join(geom_com, by ="insee_com") %>%
st_as_sf()
fichier_4326<- st_transform(fichier, crs= 4326)
return(fichier_4326)
}
#FS
fs_geom<-filter(fs_init,format_fs=='Site principal')%>%
ma_fonction(., type="ctr")%>%
rename("id_geo"="insee_com", "lib_geo"="lib_com.y" ,"id_territoire"="id_fs", "lib_territoire"="lib_fs")%>%
select(id_geo, lib_geo, id_territoire, lib_territoire)%>%
mutate(id_territoire2= paste0('fs-',id_territoire))%>%
select(-id_territoire)%>%
rename('id_territoire'='id_territoire2')%>%
group_by(id_geo)%>%
summarise(lib_geo= paste0(unique(lib_geo)),
id_territoire= paste0(unique(id_territoire), collapse = '; '),
liste_geo= paste0(unique(lib_geo), ' (', id_geo, ')',collapse = '; '),
lib_territoire= paste0(unique(lib_territoire), collapse = '; '))
View(fs_geom)
st_write(obj = fs_geom,
dsn = here(paste0("geom/geojsonV2/fs_geom.geojson")),
driver = "GeoJSON", delete_layer = TRUE, append = FALSE)
