rename("lib_territoire"="lib_ami")%>%
filter(lib_territoire!= "Sites nordiques des Hautes-Vosges" & lib_territoire!= "PNR Ballon des Vosges")
#AMI
ami_geom<-ma_fonction(ami_init, type="polygon")%>%
separate_rows(id_ami, sep = " ; ") %>%
rename("id_geo"="insee_com", "lib_geo"="lib_com.y" ,"id_territoire"="id_ami", "lib_territoire"="lib_ami")%>%
select(id_geo, lib_geo, id_territoire, lib_territoire)%>%
group_by(id_territoire)%>%
summarise()%>%
left_join(ami_init_list, by = c("id_territoire"="id_ami"))%>%
left_join(ami_gpt_data, by= c("id_territoire"="id_ami") )%>%
rename("lib_territoire"="lib_ami")
View(ami_geom)
ami_geom<-ma_fonction(ami_init, type="polygon")%>%
separate_rows(id_ami, sep = " ; ") %>%
rename("id_geo"="insee_com", "lib_geo"="lib_com.y" ,"id_territoire"="id_ami", "lib_territoire"="lib_ami")%>%
select(id_geo, lib_geo, id_territoire, lib_territoire)%>%
group_by(id_territoire)%>%
summarise()
View(ami_geom)
ami_geom<-ma_fonction(ami_init, type="polygon")%>%
separate_rows(id_ami, sep = " ; ") %>%
rename("id_geo"="insee_com", "lib_geo"="lib_com.y" ,"id_territoire"="id_ami", "lib_territoire"="lib_ami")%>%
select(id_geo, lib_geo, id_territoire, lib_territoire)%>%
group_by(id_territoire)%>%
summarise()%>%
left_join(ami_init_list, by = c("id_territoire"="id_ami"))
View(ami_geom)
ami_geom<-ma_fonction(ami_init, type="polygon")%>%
separate_rows(id_ami, sep = " ; ") %>%
rename("id_geo"="insee_com", "lib_geo"="lib_com.y" ,"id_territoire"="id_ami", "lib_territoire"="lib_ami")%>%
select(id_geo, lib_geo, id_territoire, lib_territoire)%>%
group_by(id_territoire)%>%
summarise()%>%
left_join(ami_init_list, by = c("id_territoire"="id_ami"))%>%
filter(lib_territoire!= "Sites nordiques des Hautes-Vosges" & lib_territoire!= "PNR Ballon des Vosges")
#AMI
ami_geom<-ma_fonction(ami_init, type="polygon")%>%
separate_rows(id_ami, sep = " ; ") %>%
rename("id_geo"="insee_com", "lib_geo"="lib_com.y" ,"id_territoire"="id_ami", "lib_territoire"="lib_ami")%>%
select(id_geo, lib_geo, id_territoire, lib_territoire)%>%
group_by(id_territoire)%>%
summarise()%>%
rename("lib_territoire"="lib_ami")%>%
left_join(ami_init_list, by = c("id_territoire"="id_ami"))
ami_geom<-ma_fonction(ami_init, type="polygon")%>%
separate_rows(id_ami, sep = " ; ") %>%
rename("id_geo"="insee_com", "lib_geo"="lib_com.y" ,"id_territoire"="id_ami", "lib_territoire"="lib_ami")%>%
select(id_geo, lib_geo, id_territoire, lib_territoire)%>%
group_by(id_territoire)%>%
summarise()%>%
left_join(ami_init_list, by = c("id_territoire"="id_ami"))
#AMI
ami_geom<-ma_fonction(ami_init, type="polygon")%>%
separate_rows(id_ami, sep = " ; ") %>%
rename("id_geo"="insee_com", "lib_geo"="lib_com.y" ,"id_territoire"="id_ami", "lib_territoire"="lib_ami")%>%
select(id_geo, lib_geo, id_territoire, lib_territoire)%>%
group_by(id_territoire)%>%
summarise()%>%
left_join(ami_init_list, by = c("id_territoire"="id_ami"))%>%
rename("lib_territoire"="lib_ami") %>%
filter(lib_territoire!= "Sites nordiques des Hautes-Vosges" & lib_territoire!= "PNR Ballon des Vosges")
View(ami_geom)
View(ami_gpt_data)
View(amm_gpt_data)
View(ami_groupement)
View(ami_gpt_data)
View(ami_groupement)
ami_gpt_data <- ami_groupement %>%
group_by(id_ami)%>%
summarise(liste_geo= paste0(unique(lib_groupement),' (', siren_groupement, ')', collapse = '; '),
)
#AMI
ami_geom<-ma_fonction(ami_init, type="polygon")%>%
separate_rows(id_ami, sep = " ; ") %>%
rename("id_geo"="insee_com", "lib_geo"="lib_com.y" ,"id_territoire"="id_ami", "lib_territoire"="lib_ami")%>%
select(id_geo, lib_geo, id_territoire, lib_territoire)%>%
group_by(id_territoire)%>%
summarise()%>%
left_join(ami_init_list, by = c("id_territoire"="id_ami"))%>%
rename("lib_territoire"="lib_ami") %>%
filter(lib_territoire!= "Sites nordiques des Hautes-Vosges" & lib_territoire!= "PNR Ballon des Vosges")%>%
left_join(ami_gpt_data, by="id_territoire")
View(ami_gpt_data)
#AMI
ami_geom<-ma_fonction(ami_init, type="polygon")%>%
separate_rows(id_ami, sep = " ; ") %>%
rename("id_geo"="insee_com", "lib_geo"="lib_com.y" ,"id_territoire"="id_ami", "lib_territoire"="lib_ami")%>%
select(id_geo, lib_geo, id_territoire, lib_territoire)%>%
group_by(id_territoire)%>%
summarise()%>%
left_join(ami_init_list, by = c("id_territoire"="id_ami"))%>%
rename("lib_territoire"="lib_ami") %>%
filter(lib_territoire!= "Sites nordiques des Hautes-Vosges" & lib_territoire!= "PNR Ballon des Vosges")%>%
left_join(ami_gpt_data, by= c("id_territoire"="id_ami") )
View(ami_geom)
View(ami_gpt_data)
View(ami_init_list)
View(ami_init)
View(ami_init_list)
View(ami_groupement)
View(ami_init_list)
View(ami_groupement)
ami_gpt_data <- ami_groupement %>%
group_by(id_ami)%>%
summarise(liste_geo= paste0(unique(lib_groupement),' (', siren_groupement, ')', collapse = '; '),
massif=massif
)
ami_gpt_data <- ami_groupement %>%
group_by(id_ami, massif)%>%
summarise(liste_geo= paste0(unique(lib_groupement),' (', siren_groupement, ')', collapse = '; '),
massif=massif
)
View(ami_groupement)
ami_gpt_data <- ami_groupement %>%
group_by(id_ami, lib_massif)%>%
summarise(liste_geo= paste0(unique(lib_groupement),' (', siren_groupement, ')', collapse = '; '),
massif=massif
)
ami_gpt_data <- ami_groupement %>%
group_by(id_ami, lib_massif)%>%
summarise(liste_geo= paste0(unique(lib_groupement),' (', siren_groupement, ')', collapse = '; '),
lib_massif=lib_massif
)
View(ami_groupement)
View(ami_gpt_data)
ami_gpt_data <- ami_groupement %>%
group_by(id_ami, lib_massif)%>%
summarise(liste_geo= paste0(unique(lib_groupement),' (', siren_groupement, ')', collapse = '; ')
)
View(ami_gpt_data)
#AMI
ami_geom<-ma_fonction(ami_init, type="polygon")%>%
separate_rows(id_ami, sep = " ; ") %>%
rename("id_geo"="insee_com", "lib_geo"="lib_com.y" ,"id_territoire"="id_ami", "lib_territoire"="lib_ami")%>%
select(id_geo, lib_geo, id_territoire, lib_territoire)%>%
group_by(id_territoire)%>%
summarise()%>%
left_join(ami_init_list, by = c("id_territoire"="id_ami"))%>%
rename("lib_territoire"="lib_ami") %>%
filter(lib_territoire!= "Sites nordiques des Hautes-Vosges" & lib_territoire!= "PNR Ballon des Vosges")%>%
left_join(ami_gpt_data, by= c("id_territoire"="id_ami") )
View(ami_geom)
crte_geom<-ma_fonction(crte_init, type="polygon")%>%
separate_rows(id_crte, sep = " ; ")
#CRTE
crte_init<-read.csv("N:/Transverse/Donnees_Obs/Donnees_Statistiques/ANCT/contrats-de-relance-et-de-transition-ecologique/liste-crte-com2023-20230823.csv", fileEncoding ="utf-8")
crte_init_list<-read.csv("N:/Transverse/Donnees_Obs/Donnees_Statistiques/ANCT/contrats-de-relance-et-de-transition-ecologique/liste-crte-20230823.csv", fileEncoding ="utf-8")
crte_geom<-ma_fonction(crte_init, type="polygon")%>%
separate_rows(id_crte, sep = " ; ")
View(crte_geom)
crte_groupement<-read.csv("N:/Transverse/Donnees_Obs/Donnees_Statistiques/ANCT/contrats-de-relance-et-de-transition-ecologique/liste-crte-grpt2023-20230823.csv", fileEncoding ="utf-8")
crte_gpt_data <- crte_groupement %>%
group_by(id_crte)%>%
summarise(liste_geo= paste0(unique(lib_groupement),' (', siren_groupement, ')', collapse = '; '))
View(crte_gpt_data)
crte_geom<-ma_fonction(crte_init, type="polygon")%>%
separate_rows(id_crte, sep = " ; ")%>%
rename("id_geo"="insee_com", "lib_geo"="lib_com.y" ,"id_territoire"="id_crte", "lib_territoire"="lib_crte")%>%
select(id_geo, lib_geo, id_territoire, lib_territoire)%>%
group_by(id_territoire)%>%
summarise()
View(crte_geom)
View(crte_geom)
crte_geom<-ma_fonction(crte_init, type="polygon")%>%
separate_rows(id_crte, sep = " ; ")%>%
rename("id_geo"="insee_com", "lib_geo"="lib_com.y" ,"id_territoire"="id_crte", "lib_territoire"="lib_crte")%>%
select(id_geo, lib_geo, id_territoire, lib_territoire)%>%
group_by(id_territoire)%>%
summarise()%>%
left_join(crte_init_list, by = c("id_territoire"="id_crte"))
View(crte_geom)
crte_geom<-ma_fonction(crte_init, type="polygon")%>%
separate_rows(id_crte, sep = " ; ")%>%
rename("id_geo"="insee_com", "lib_geo"="lib_com.y" ,"id_territoire"="id_crte", "lib_territoire"="lib_crte")%>%
select(id_geo, lib_geo, id_territoire, lib_territoire)%>%
group_by(id_territoire)%>%
summarise()%>%
left_join(crte_init_list, by = c("id_territoire"="id_crte"))%>%
left_join(crte_gpt_data, by= c("id_territoire"="crte") )%>%
rename("lib_territoire"="lib_crte")
crte_geom<-ma_fonction(crte_init, type="polygon")%>%
separate_rows(id_crte, sep = " ; ")%>%
rename("id_geo"="insee_com", "lib_geo"="lib_com.y" ,"id_territoire"="id_crte", "lib_territoire"="lib_crte")%>%
select(id_geo, lib_geo, id_territoire, lib_territoire)%>%
group_by(id_territoire)%>%
summarise()%>%
left_join(crte_init_list, by = c("id_territoire"="id_crte"))%>%
left_join(crte_gpt_data, by= c("id_territoire"="id_crte") )%>%
rename("lib_territoire"="lib_crte")
View(crte_geom)
#EXPORTS
st_write(obj = acv_geom,
dsn = here(paste0("geom/geojsonV2/acv_geom.geojson")),
driver = "GeoJSON", delete_layer = TRUE, append = FALSE)
st_write(obj = acv2_geom,
dsn = here(paste0("geom/geojsonV2/acv2_geom.geojson")),
driver = "GeoJSON", delete_layer = TRUE, append = FALSE)
st_write(obj = pvd_geom,
dsn = here(paste0("geom/geojsonV2/pvd_geom.geojson")),
driver = "GeoJSON", delete_layer = TRUE, append = FALSE)
st_write(obj = fs_geom,
dsn = here(paste0("geom/geojsonV2/fs_geom.geojson")),
driver = "GeoJSON", delete_layer = TRUE, append = FALSE)
st_write(obj = ti_geom,
dsn = here(paste0("geom/geojsonV2/ti_geom.geojson")),
driver = "GeoJSON", delete_layer = TRUE, append = FALSE)
st_write(obj = amm_geom,
dsn = here(paste0("geom/geojsonV2/amm_geom.geojson")),
driver = "GeoJSON", delete_layer = TRUE, append = FALSE)
st_write(obj = ami_geom,
dsn = here(paste0("geom/geojsonV2/ami_geom.geojson")),
driver = "GeoJSON", delete_layer = TRUE, append = FALSE)
st_write(obj = crte_geom,
dsn = here(paste0("geom/geojsonV2/crte_geom.geojson")),
driver = "GeoJSON", delete_layer = TRUE, append = FALSE)
View(crte_geom)
View(crte_init_list)
View(crte_init)
#Telecharger les librairie
library(sf)
library(rgdal)
library(tidyverse)
library(readxl)
library(writexl)
library(RSQLite)
library(here)
geom_com_ctr <- st_read("N://Transverse/Donnees_Obs/Donnees_SIG/ADMIN_STAT/map-process/public/france/2023/fr-drom/centroide-fr-drom-3395-gen.gpkg",
layer = "com")
geom_com_polygon <- st_read("N://Transverse/Donnees_Obs/Donnees_SIG/ADMIN_STAT/map-process/public/france/2023/fr-drom/fr-drom-3395-gen.gpkg",
layer = "com")
#Cité educatives
cite_init <- read.csv("N:/Transverse/Donnees_Obs/Donnees_Statistiques/ANCT/cites-educatives/liste-cite-com2023-20230817.csv", fileEncoding ="utf-8")
#Cité de l'emploi
cde_init <- read.csv("N:/Transverse/Donnees_Obs/Donnees_Statistiques/ANCT/cites-emploi/liste-cde-com2023-20231108.csv", fileEncoding ="utf-8")
cde_list_init<- read.csv("N:/Transverse/Donnees_Obs/Donnees_Statistiques/ANCT/cites-emploi/liste-cde-qp2023-20231108.csv", fileEncoding ="utf-8")
cde_data<- cde_init%>%
mutate(insee_com = ifelse(nchar(insee_com) == 4, paste0("0", insee_com), insee_com))
#Cité éducative
citeduc_init <- read.csv("N:/Transverse/Donnees_Obs/Donnees_Statistiques/ANCT/cites-educatives/liste-cite-com2023-20230817.csv", fileEncoding ="utf-8")
citeduc_list_init<- read.csv("N:/Transverse/Donnees_Obs/Donnees_Statistiques/ANCT/cites-educatives/liste-cite-20230817.csv", fileEncoding ="utf-8")
#TRANSFORMER LES DONNEES - creation d'une fonction-------------------------------------------------------
ma_fonction<- function(data_init, type){
fichier_init <- deparse(substitute(data_init))
if (type == "ctr") {
geom_com <- geom_com_ctr
} else if (type == "polygon") {
geom_com <- geom_com_polygon
} else {
stop("Le paramètre 'type' doit être soit 'ctr' ou 'polygon'")
}
fichier<- data_init%>%
left_join(geom_com, by ="insee_com") %>%
st_as_sf()
fichier_4326<- st_transform(fichier, crs= 4326)
return(fichier_4326)
}
#cité de l'emploi
cde_list_qp <- cde_list_init%>%
group_by(id_cde, lib_cde)%>%
summarise(liste_geo = paste0(unique(lib_qp),' (', id_qp, ')', collapse = '; '))
cde_geom<-ma_fonction(cde_data, type="polygon")%>%
separate_rows(id_cde, sep = " ; ")%>%
rename("id_geo"="insee_com", "lib_geo"="lib_com.x" ,"id_territoire"="id_cde", "lib_territoire"="lib_cde")%>%
group_by(id_territoire)%>%
summarise()%>%
st_centroid()%>%
left_join(cde_list_qp, by=c("id_territoire"="id_cde"))
View(cde_geom)
cde_geom<-ma_fonction(cde_data, type="polygon")%>%
separate_rows(id_cde, sep = " ; ")%>%
rename("id_geo"="insee_com", "lib_geo"="lib_com.x" ,"id_territoire"="id_cde", "lib_territoire"="lib_cde")%>%
group_by(id_territoire)%>%
summarise()%>%
st_centroid()%>%
left_join(cde_list_qp, by=c("id_territoire"="id_cde"))%>%
rename("lib_territoire"="lib_cde")
#cité éducative
citeduc <- citeduc_list_init%>%
group_by(id_cite, lib_cite)%>%
summarise(liste_geo = paste0(unique(lib_cite),' (', id_cite, ')', collapse = '; '))
citeduc_geom<-ma_fonction(citeduc_init, type="polygon")%>%
separate_rows(id_cite, sep = " ; ")%>%
rename("id_geo"="insee_com", "lib_geo"="lib_com.x" ,"id_territoire"="id_cite", "lib_territoire"="lib_cite")%>%
group_by(id_territoire)%>%
summarise()%>%
st_centroid()%>%
left_join(citeduc, by=c("id_territoire"="id_cite"))
View(citeduc_geom)
citeduc_geom<-ma_fonction(citeduc_init, type="polygon")%>%
separate_rows(id_cite, sep = " ; ")%>%
rename("id_geo"="insee_com", "lib_geo"="lib_com.x" ,"id_territoire"="id_cite", "lib_territoire"="lib_cite")%>%
group_by(id_territoire)%>%
summarise()%>%
st_centroid()%>%
left_join(citeduc, by=c("id_territoire"="id_cite"))%>%
rename("lib_territoire"="lib_cite")
st_write(obj = cde_geom,
dsn = here(paste0("geom/geojsonV2/cde_geom.geojson")),
driver = "GeoJSON", delete_layer = TRUE, append = FALSE)
st_write(obj = citeduc_geom,
dsn = here(paste0("geom/geojsonV2/citeduc_geom.geojson")),
driver = "GeoJSON", delete_layer = TRUE, append = FALSE)
st_write(obj = cde_geom,
dsn = here(paste0("geom/geojsonV2/cde_geom.geojson")),
driver = "GeoJSON", delete_layer = TRUE, append = FALSE)
st_write(obj = cde_geom,
dsn = here(paste0("geom/geojsonV2/cde_geom.geojson")),
driver = "GeoJSON", delete_layer = TRUE, append = FALSE)
#Telecharger les librairie
library(sf)
library(rgdal)
library(tidyverse)
library(readxl)
library(writexl)
library(RSQLite)
library(here)
geom_com_ctr <- st_read("N://Transverse/Donnees_Obs/Donnees_SIG/ADMIN_STAT/map-process/public/france/2023/fr-drom/centroide-fr-drom-3395-gen.gpkg",
layer = "com")
geom_com_polygon <- st_read("N://Transverse/Donnees_Obs/Donnees_SIG/ADMIN_STAT/map-process/public/france/2023/fr-drom/fr-drom-3395-gen.gpkg",
layer = "com")
#Cité de l'emploi
cde_init <- read.csv("N:/Transverse/Donnees_Obs/Donnees_Statistiques/ANCT/cites-emploi/liste-cde-com2023-20231108.csv", fileEncoding ="utf-8")
cde_list_init<- read.csv("N:/Transverse/Donnees_Obs/Donnees_Statistiques/ANCT/cites-emploi/liste-cde-qp2023-20231108.csv", fileEncoding ="utf-8")
cde_data<- cde_init%>%
mutate(insee_com = ifelse(nchar(insee_com) == 4, paste0("0", insee_com), insee_com))
#Cité éducative
citeduc_init <- read.csv("N:/Transverse/Donnees_Obs/Donnees_Statistiques/ANCT/cites-educatives/liste-cite-com2023-20230817.csv", fileEncoding ="utf-8")
citeduc_list_init<- read.csv("N:/Transverse/Donnees_Obs/Donnees_Statistiques/ANCT/cites-educatives/liste-cite-20230817.csv", fileEncoding ="utf-8")
#TRANSFORMER LES DONNEES - creation d'une fonction-------------------------------------------------------
ma_fonction<- function(data_init, type){
fichier_init <- deparse(substitute(data_init))
if (type == "ctr") {
geom_com <- geom_com_ctr
} else if (type == "polygon") {
geom_com <- geom_com_polygon
} else {
stop("Le paramètre 'type' doit être soit 'ctr' ou 'polygon'")
}
fichier<- data_init%>%
left_join(geom_com, by ="insee_com") %>%
st_as_sf()
fichier_4326<- st_transform(fichier, crs= 4326)
return(fichier_4326)
}
#cité de l'emploi
cde_list_qp <- cde_list_init%>%
group_by(id_cde, lib_cde)%>%
summarise(liste_geo = paste0(unique(lib_qp),' (', id_qp, ')', collapse = '; '))
cde_geom<-ma_fonction(cde_data, type="polygon")%>%
separate_rows(id_cde, sep = " ; ")%>%
rename("id_geo"="insee_com", "lib_geo"="lib_com.x" ,"id_territoire"="id_cde", "lib_territoire"="lib_cde")%>%
group_by(id_territoire)%>%
summarise()%>%
st_centroid()%>%
left_join(cde_list_qp, by=c("id_territoire"="id_cde"))%>%
rename("lib_territoire"="lib_cde")
#cité éducative
citeduc <- citeduc_list_init%>%
group_by(id_cite, lib_cite)%>%
summarise(liste_geo = paste0(unique(lib_cite),' (', id_cite, ')', collapse = '; '))
citeduc_geom<-ma_fonction(citeduc_init, type="polygon")%>%
separate_rows(id_cite, sep = " ; ")%>%
rename("id_geo"="insee_com", "lib_geo"="lib_com.x" ,"id_territoire"="id_cite", "lib_territoire"="lib_cite")%>%
group_by(id_territoire)%>%
summarise()%>%
st_centroid()%>%
left_join(citeduc, by=c("id_territoire"="id_cite"))%>%
rename("lib_territoire"="lib_cite")
st_write(obj = cde_geom,
dsn = here(paste0("geom/geojsonV2/cde_geom.geojson")),
driver = "GeoJSON", delete_layer = TRUE, append = FALSE)
st_write(obj = citeduc_geom,
dsn = here(paste0("geom/geojsonV2/citeduc_geom.geojson")),
driver = "GeoJSON", delete_layer = TRUE, append = FALSE)
#Telecharger les librairie
library(sf)
library(rgdal)
library(tidyverse)
library(readxl)
library(writexl)
library(RSQLite)
library(here)
geom_com_ctr <- st_read("N://Transverse/Donnees_Obs/Donnees_SIG/ADMIN_STAT/map-process/public/france/2023/fr-drom/centroide-fr-drom-3395-gen.gpkg",
layer = "com")
geom_com_polygon <- st_read("N://Transverse/Donnees_Obs/Donnees_SIG/ADMIN_STAT/map-process/public/france/2023/fr-drom/fr-drom-3395-gen.gpkg",
layer = "com")
#FABRIQUE PROSPECTIVES
fabp_init <- read.csv("N:/Transverse/Donnees_Obs/Donnees_Statistiques/ANCT/fabriques-prospectives/liste-fabp-com2023-20231005.csv", fileEncoding ="utf-8")
fabp_init_list <- read.csv("N:/Transverse/Donnees_Obs/Donnees_Statistiques/ANCT/fabriques-prospectives/liste-fabp-20231005.csv", fileEncoding ="utf-8")
#TRANSFORMER LES DONNEES - creation d'une fonction-------------------------------------------------------
ma_fonction<- function(data_init, type){
fichier_init <- deparse(substitute(data_init))
if (type == "ctr") {
geom_com <- geom_com_ctr
} else if (type == "polygon") {
geom_com <- geom_com_polygon
} else {
stop("Le paramètre 'type' doit être soit 'ctr' ou 'polygon'")
}
fichier<- data_init%>%
left_join(geom_com, by ="insee_com") %>%
st_as_sf()
fichier_4326<- st_transform(fichier, crs= 4326)
return(fichier_4326)
}
fabp_groupement <- read.csv("N:/Transverse/Donnees_Obs/Donnees_Statistiques/ANCT/fabriques-prospectives/liste-fabp-grpt2023-20231005.csv", fileEncoding ="utf-8")
#Fabriques prospetives
fabp_gpt_data <- fabp_groupement %>%
group_by(id_fabp)%>%
summarise(liste_geo= paste0(unique(lib_groupement),' (', siren_groupement, ')', collapse = '; '))
View(fabp_gpt_data)
fabp_geom<-ma_fonction(fabp_init, type="polygon")%>%
separate_rows(id_fabp, sep = " ; ")%>%
rename("id_geo"="insee_com", "lib_geo"="lib_com.y" ,"id_territoire"="id_fabp", "lib_territoire"="lib_fabp")%>%
select(id_geo, lib_geo, id_territoire, lib_territoire)%>%
group_by(id_territoire)%>%
summarise()%>%
left_join(fabp_init_list, by = c("id_territoire"="id_fabp"))%>%
left_join(fabp_gpt_data, by= c("id_territoire"="id_fabp") )%>%
rename("lib_territoire"="lib_fabp")
fabp_geom<-ma_fonction(fabp_init, type="polygon")
glimpse(fabp_init)
glimpse(geom_com_polygon)
glimpse(citeduc_init)
#FABRIQUE PROSPECTIVES
fabp_init <- read.csv("N:/Transverse/Donnees_Obs/Donnees_Statistiques/ANCT/fabriques-prospectives/liste-fabp-com2023-20231005.csv", fileEncoding ="utf-8")%>%
as.integer(insee_com)
fabp_init$insee_com <- as.integer(fabp_init$insee_com)
glimpse(fabp_init)
fabp_init$insee_com <- as.character(fabp_init$insee_com)
glimpse(fabp_init)
#FABRIQUE PROSPECTIVES
fabp_init <- read.csv("N:/Transverse/Donnees_Obs/Donnees_Statistiques/ANCT/fabriques-prospectives/liste-fabp-com2023-20231005.csv", fileEncoding ="utf-8")
fabp_init$insee_com <- as.character(fabp_init$insee_com)
glimpse(fabp_init)
#FABRIQUE PROSPECTIVES
fabp_init <- read.csv("N:/Transverse/Donnees_Obs/Donnees_Statistiques/ANCT/fabriques-prospectives/liste-fabp-com2023-20231005.csv", fileEncoding ="utf-8")
glimpse(fabp_init)
#FABRIQUE PROSPECTIVES
fabp_init <- read.csv("N:/Transverse/Donnees_Obs/Donnees_Statistiques/ANCT/fabriques-prospectives/liste-fabp-com2023-20231005.csv", fileEncoding ="utf-8", colClasses = c(insee_com=character()))
glimpse(fabp_init)
#FABRIQUE PROSPECTIVES
fabp_init <- read.csv("N:/Transverse/Donnees_Obs/Donnees_Statistiques/ANCT/fabriques-prospectives/liste-fabp-com2023-20231005.csv", fileEncoding ="utf-8", colClasses = c("insee_com"="character"))
glimpse(fabp_init)
fabp_geom<-ma_fonction(fabp_init, type="polygon")
View(fabp_geom)
fabp_geom<-ma_fonction(fabp_init, type="polygon")%>%
separate_rows(id_fabp, sep = " ; ")
fabp_geom<-ma_fonction(fabp_init, type="polygon")
fabp_geom<-ma_fonction(fabp_init, type="polygon")%>%
separate_rows(id_fabp, sep = " ; ")%>%
rename("id_geo"="insee_com", "lib_geo"="lib_com.y" ,"id_territoire"="id_fabp", "lib_territoire"="lib_fabp")
fabp_geom<-ma_fonction(fabp_init, type="polygon")%>%
separate_rows(id_fabp, sep = " ; ")%>%
rename("id_geo"="insee_com", "lib_geo"="lib_com.y" ,"id_territoire"="id_fabp", "lib_territoire"="lib_fabp")%>%
select(id_geo, lib_geo, id_territoire, lib_territoire)%>%
group_by(id_territoire)
fabp_geom<-ma_fonction(fabp_init, type="polygon")%>%
separate_rows(id_fabp, sep = " ; ")%>%
rename("id_geo"="insee_com", "lib_geo"="lib_com.y" ,"id_territoire"="id_fabp", "lib_territoire"="lib_fabp")%>%
select(id_geo, lib_geo, id_territoire, lib_territoire)%>%
group_by(id_territoire)%>%
summarise()
fabp_geom<-ma_fonction(fabp_init, type="polygon")%>%
separate_rows(id_fabp, sep = " ; ")%>%
rename("id_geo"="insee_com", "lib_geo"="lib_com.y" ,"id_territoire"="id_fabp", "lib_territoire"="lib_fabp")%>%
select(id_geo, lib_geo, id_territoire, lib_territoire)%>%
group_by(id_territoire)%>%
summarise()%>%
left_join(fabp_init_list, by = c("id_territoire"="id_fabp"))
fabp_geom<-ma_fonction(fabp_init, type="polygon")%>%
separate_rows(id_fabp, sep = " ; ")%>%
rename("id_geo"="insee_com", "lib_geo"="lib_com.y" ,"id_territoire"="id_fabp", "lib_territoire"="lib_fabp")%>%
select(id_geo, lib_geo, id_territoire, lib_territoire)%>%
group_by(id_territoire)%>%
summarise()%>%
left_join(fabp_init_list, by = c("id_territoire"="id_fabp"))%>%
left_join(fabp_gpt_data, by= c("id_territoire"="id_fabp") )
fabp_geom<-ma_fonction(fabp_init, type="polygon")%>%
separate_rows(id_fabp, sep = " ; ")%>%
rename("id_geo"="insee_com", "lib_geo"="lib_com.y" ,"id_territoire"="id_fabp", "lib_territoire"="lib_fabp")%>%
select(id_geo, lib_geo, id_territoire, lib_territoire)%>%
group_by(id_territoire)%>%
summarise()%>%
left_join(fabp_init_list, by = c("id_territoire"="id_fabp"))%>%
left_join(fabp_gpt_data, by= c("id_territoire"="id_fabp") )%>%
rename("lib_territoire"="lib_fabp")
fabp_geom<-fabp_init%>%
separate_rows(id_fabp, sep = " ; ")
fabp_geom<-fabp_init%>%
separate_rows(id_fabp, sep = " ; ")%>%
rename("id_geo"="insee_com", "lib_geo"="lib_com.y" ,"id_territoire"="id_fabp", "lib_territoire"="lib_fabp")%>%
select(id_geo, lib_geo, id_territoire, lib_territoire)%>%
group_by(id_territoire)
fabp_geom<-fabp_init%>%
separate_rows(id_fabp, sep = " ; ")%>%
rename("id_geo"="insee_com", "lib_geo"="lib_com" ,"id_territoire"="id_fabp", "lib_territoire"="lib_fabp")%>%
select(id_geo, lib_geo, id_territoire, lib_territoire)
fabp_geom<-ma_fonction(fabp_init, type="polygon")%>%
separate_rows(id_fabp, sep = " ; ")%>%
rename("id_geo"="insee_com", "lib_geo"="lib_com.y" ,"id_territoire"="id_fabp", "lib_territoire"="lib_fabp")%>%
select(id_geo, lib_geo, id_territoire, lib_territoire)%>%
group_by(id_territoire)%>%
summarise()%>%
left_join(fabp_init_list, by = c("id_territoire"="id_fabp"))%>%
left_join(fabp_gpt_data, by= c("id_territoire"="id_fabp") )%>%
rename("lib_territoire"="lib_fabp")
st_write(obj = fabp_geom,
dsn = here(paste0("geom/geojsonV2/fabp_geom.geojson")),
driver = "GeoJSON", delete_layer = TRUE, append = FALSE)
plot(fabp_geom$geom)
