fichier<- data_init%>%
left_join(geom_com, by ="insee_com") %>%
st_as_sf()
fichier_4326<- st_transform(fichier, crs= 4326)
return(fichier_4326)
}
#PVD
pvd_geom<-ma_fonction(pvd_init, type="ctr")%>%
rename("id_geo"="insee_com", "lib_geo"="lib_com.y" ,"id_territoire"="id_pvd", "lib_territoire"="lib_com_carto")%>%
select(id_geo, lib_geo, id_territoire, lib_territoire, date_signature)%>%
group_by(id_territoire, lib_territoire, date_signature)%>%
summarise(liste_geo= paste0(unique(lib_geo),' (', id_geo, ')', collapse = '; '))
View(pvd_geom)
st_write(obj = pvd_geom,
dsn = here(paste0("geom/geojsonV2/pvd_geom.geojson")),
driver = "GeoJSON", delete_layer = TRUE, append = FALSE)
#Telecharger les librairie
library(sf)
library(rgdal)
library(tidyverse)
library(readxl)
library(writexl)
library(RSQLite)
library(here)
epci_geom <- st_read("N://Transverse/Donnees_Obs/Donnees_SIG/ADMIN_STAT/map-process/public/france/2023/fr-drom/fr-drom-3395-gen.gpkg",
layer = "epci")
epci_geom_4326<- st_transform(epci_geom, crs= 4326)
plot(epci_geom$geom)
plot(epci_geom_4326$geom)
com_geom_4326
st_write(obj = epci_geom_4326,
dsn = here(paste0("geom/geojson/epci_geom_4326.geojson")),
driver = "GeoJSON", delete_layer = TRUE, append = FALSE)
#Telecharger les librairie
library(sf)
library(rgdal)
library(tidyverse)
library(readxl)
library(writexl)
library(RSQLite)
library(here)
geom_com_ctr <- st_read("N://Transverse/Donnees_Obs/Donnees_SIG/ADMIN_STAT/map-process/public/france/2023/fr-drom/centroide-fr-drom-3395-gen.gpkg",
layer = "com")
geom_com_polygon <- st_read("N://Transverse/Donnees_Obs/Donnees_SIG/ADMIN_STAT/map-process/public/france/2023/fr-drom/fr-drom-3395-gen.gpkg",
layer = "com")
# geom_epci_polygon <- st_read("N://Transverse/Donnees_Obs/Donnees_SIG/ADMIN_STAT/map-process/public/france/2023/fr-drom/fr-drom-3395-gen.gpkg",
#                             layer = "epci")
#Manufacture de proximité
manuprox_init<- st_read("N:/DST/Carto/APPROCHE SECTORIELLE/MUTECO_INNOVATION/MANUFACTURES_PROXIMITE/CROISEMENTS/manufactures_TI/data/geom/manufacture_proximite_01_22.gpkg") %>%
st_drop_geometry() %>%
mutate(lib_com = ifelse(is.na(lib_com) | lib_com == "",gsub(" .*", "", as.character(lib_arm)),lib_com),
insee_com = ifelse(is.na(insee_com) | insee_com == "",ifelse(lib_com == "Marseille", "13055",ifelse(lib_com == "Lyon", "69123", ifelse(lib_com == "Paris", "75056", insee_com))),insee_com))
#TRANSFORMER LES DONNEES - creation d'une fonction-------------------------------------------------------
ma_fonction<- function(data_init, type){
fichier_init <- deparse(substitute(data_init))
if (type == "ctr") {
geom_com <- geom_com_ctr
} else if (type == "polygon") {
geom_com <- geom_com_polygon
} else {
stop("Le paramètre 'type' doit être soit 'ctr' ou 'polygon'")
}
fichier<- data_init%>%
left_join(geom_com, by ="insee_com") %>%
st_as_sf()
fichier_4326<- st_transform(fichier, crs= 4326)
return(fichier_4326)
}
#Manufactures de proximité
manuprox_data <- manuprox_init %>%
arrange(vague) %>%
mutate(id_geo= ifelse(!is.na(insee_com), insee_com, insee_arm),
lib_geo= ifelse(!is.na(lib_com), lib_com, lib_arm),
id_territoire= paste0("mp_",vague,"-",as.character((seq(1:nrow(manuprox_data))))))
manuprox_geom <-ma_fonction(manuprox_data, type="ctr")%>%
rename("lib_territoire"="nom_projet")%>%
select(id_geo, lib_geo,id_territoire, lib_territoire) %>%
group_by(id_geo)%>%
summarise(lib_geo= paste0(unique(lib_geo)),
id_territoire= paste0(unique(id_territoire), collapse = '; '),
liste_geo= paste0(lib_geo, ' (', id_geo[1], ')'),
lib_territoire= paste0(unique(lib_territoire), collapse = '; '))
#Manufactures de proximité
manuprox_data <- manuprox_init %>%
arrange(vague) %>%
mutate(id_geo= ifelse(!is.na(insee_com), insee_com, insee_arm),
lib_geo= ifelse(!is.na(lib_com), lib_com, lib_arm),
id_territoire= paste0("mp_",vague,"-",as.character((seq(1:nrow(manuprox_data))))))
manuprox_data <- manuprox_init %>%
arrange(vague)
#Manufactures de proximité
manuprox_data <- manuprox_init %>%
arrange(vague) %>%
mutate(id_geo= ifelse(!is.na(insee_com), insee_com, insee_arm),
lib_geo= ifelse(!is.na(lib_com), lib_com, lib_arm),
id_territoire= paste0("mp_",vague,"-",as.character((seq(1:nrow(manuprox_data))))))
View(manuprox_data)
manuprox_geom <-ma_fonction(manuprox_data, type="ctr")%>%
rename("lib_territoire"="nom_projet")%>%
select(id_geo, lib_geo,id_territoire, lib_territoire) %>%
group_by(id_geo)%>%
summarise(lib_geo= paste0(unique(lib_geo)),
id_territoire= paste0(unique(id_territoire), collapse = '; '),
liste_geo= paste0(lib_geo, ' (', id_geo[1], ')'),
lib_territoire= paste0(unique(lib_territoire), collapse = '; '))
View(manuprox_geom)
st_write(obj = manuprox_geom,
dsn = here(paste0("geom/geojsonV2/manuprox_geom.geojson")),
driver = "GeoJSON", delete_layer = TRUE, append = FALSE)
#Manufactures de proximité
manuprox_data <- manuprox_init %>%
arrange(vague) %>%
mutate(id_geo= ifelse(!is.na(insee_com), insee_com, insee_arm),
lib_geo= ifelse(!is.na(lib_com), lib_com, lib_arm),
id_territoire= paste0("manuprox-",vague,"-",as.character((seq(1:nrow(manuprox_data))))))
#Fabriques de territoire
fabt_init<- read_excel("N:/DST/Carto/APPROCHE SECTORIELLE/MUTECO_INNOVATION/FABRIQUE_TERRITOIRE/2E_VAGUE/DATA/tabs/data_fabrique_territoires_01_24.xlsx")
View(fabt_init)
#Cité éducative
citeduc_init <- read.csv("N:/Transverse/Donnees_Obs/Donnees_Statistiques/ANCT/cites-educatives/liste-cite-com2023-20230817.csv", fileEncoding ="utf-8")
View(citeduc_init)
manuprox_geom <-ma_fonction(manuprox_data, type="ctr")%>%
rename("lib_territoire"="nom_projet")%>%
select(id_geo, lib_geo,id_territoire, lib_territoire) %>%
group_by(id_geo)%>%
summarise(lib_geo= paste0(unique(lib_geo)),
id_territoire= paste0(unique(id_territoire), collapse = '; '),
liste_geo= paste0(lib_geo, ' (', id_geo[1], ')'),
lib_territoire= paste0(unique(lib_territoire), collapse = '; '))
st_write(obj = manuprox_geom,
dsn = here(paste0("geom/geojsonV2/manuprox_geom.geojson")),
driver = "GeoJSON", delete_layer = TRUE, append = FALSE)
#Telecharger les librairie
library(sf)
library(rgdal)
library(tidyverse)
library(readxl)
library(writexl)
library(RSQLite)
library(here)
geom_com_ctr <- st_read("N://Transverse/Donnees_Obs/Donnees_SIG/ADMIN_STAT/map-process/public/france/2023/fr-drom/centroide-fr-drom-3395-gen.gpkg",
layer = "com")
geom_com_polygon <- st_read("N://Transverse/Donnees_Obs/Donnees_SIG/ADMIN_STAT/map-process/public/france/2023/fr-drom/fr-drom-3395-gen.gpkg",
layer = "com")
# geom_epci_polygon <- st_read("N://Transverse/Donnees_Obs/Donnees_SIG/ADMIN_STAT/map-process/public/france/2023/fr-drom/fr-drom-3395-gen.gpkg",
#                             layer = "epci")
#Cité educatives
cite_init <- read.csv("N:/Transverse/Donnees_Obs/Donnees_Statistiques/ANCT/cites-educatives/liste-cite-com2023-20230817.csv", fileEncoding ="utf-8")
View(cite_init)
citeduc_groupement<- read.csv("N:/Transverse/Donnees_Obs/Donnees_Statistiques/ANCT/cites-educatives/liste-cite-grpt2023-20230817.csv", fileEncoding ="utf-8")
View(citeduc_groupement)
#cité éducative
citeduc_gpt_data <- citeduc_groupement%>%
group_by(id_cite, lib_cite)%>%
summarise(liste_geo = paste0(unique(lib_qp),' (', id_qp, ')', collapse = '; '))
View(citeduc_gpt_data)
View(citeduc_groupement)
citeduc_geom<-ma_fonction(citeduc_init, type="polygon")
#TRANSFORMER LES DONNEES - creation d'une fonction-------------------------------------------------------
ma_fonction<- function(data_init, type){
fichier_init <- deparse(substitute(data_init))
if (type == "ctr") {
geom_com <- geom_com_ctr
} else if (type == "polygon") {
geom_com <- geom_com_polygon
} else {
stop("Le paramètre 'type' doit être soit 'ctr' ou 'polygon'")
}
fichier<- data_init%>%
left_join(geom_com, by ="insee_com") %>%
st_as_sf()
fichier_4326<- st_transform(fichier, crs= 4326)
return(fichier_4326)
}
citeduc_geom<-ma_fonction(citeduc_init, type="polygon")
#Cité éducative
citeduc_init <- read.csv("N:/Transverse/Donnees_Obs/Donnees_Statistiques/ANCT/cites-educatives/liste-cite-com2023-20230817.csv", fileEncoding ="utf-8")
View(citeduc_init)
citeduc_geom<-ma_fonction(citeduc_init, type="polygon")
View(citeduc_geom)
citeduc_geom<-ma_fonction(citeduc_init, type="polygon")%>%
# separate_rows(id_cite, sep = " ; ")%>%
rename("id_geo"="insee_com", "lib_geo"="lib_com.x" ,"id_territoire"="id_cite", "lib_territoire"="lib_cite")
citeduc_geom<-ma_fonction(citeduc_init, type="ctr")%>%
# separate_rows(id_cite, sep = " ; ")%>%
rename("id_geo"="insee_com", "lib_geo"="lib_com.x" ,"id_territoire"="id_cite", "lib_territoire"="lib_cite")
citeduc_geom<-ma_fonction(citeduc_init, type="ctr")%>%
# separate_rows(id_cite, sep = " ; ")%>%
rename("id_geo"="insee_com", "lib_geo"="lib_com.x" ,"id_territoire"="id_cite", "lib_territoire"="lib_cite")%>%
group_by(id_geo)%>%
summarise()%>%
left_join(citeduc_gpt_data, by=c("id_territoire"="id_cite"))%>%
rename("lib_territoire"="lib_cite")
citeduc_geom<-ma_fonction(citeduc_init, type="ctr")%>%
# separate_rows(id_cite, sep = " ; ")%>%
rename("id_geo"="insee_com", "lib_geo"="lib_com.x" ,"id_territoire"="id_cite", "lib_territoire"="lib_cite")%>%
group_by(id_geo)%>%
summarise()
citeduc_geom<-ma_fonction(citeduc_init, type="ctr")%>%
# separate_rows(id_cite, sep = " ; ")%>%
rename("id_geo"="insee_com", "lib_geo"="lib_com.x" ,"id_territoire"="id_cite", "lib_territoire"="lib_cite")%>%
group_by(id_geo)%>%
summarise(lib_geo= paste0(unique(lib_geo)),
id_territoire= paste0(unique(id_territoire), collapse = '; '),
liste_geo= paste0(lib_geo, ' (', id_geo[1], ')'),
lib_territoire= paste0(unique(lib_territoire), collapse = '; ') )
citeduc_geom<-ma_fonction(citeduc_init, type="ctr")%>%
# separate_rows(id_cite, sep = " ; ")%>%
rename("id_geo"="insee_com", "lib_geo"="lib_com.x" ,"id_territoire"="id_cite", "lib_territoire"="lib_cite")%>%
group_by(id_geo)%>%
summarise(lib_geo= paste0(unique(lib_geo)),
id_territoire= paste0(unique(id_territoire), collapse = '; '),
liste_geo= paste0(lib_geo, ' (', id_geo[1], ')'),
lib_territoire= paste0(unique(lib_territoire), collapse = '; ') )%>%
left_join(citeduc_gpt_data, by=c("id_territoire"="id_cite"))%>%
rename("lib_territoire"="lib_cite")
st_write(obj = citeduc_geom,
dsn = here(paste0("geom/geojsonV2/citeduc_geom.geojson")),
driver = "GeoJSON", delete_layer = TRUE, append = FALSE)
View(citeduc_geom)
#ACV
acv_init <- read.csv("N:/Transverse/Donnees_Obs/Donnees_Statistiques/ANCT/action-coeur-de-ville/liste-acv-com2023-20230802.csv", fileEncoding ="utf-8" )
#ACV
acv_init <- read.csv("N:/Transverse/Donnees_Obs/Donnees_Statistiques/ANCT/action-coeur-de-ville/liste-acv-com2023-20240205.csv", fileEncoding ="utf-8" )
View(acv_init)
#TRANSFORMER LES DONNEES - creation d'une fonction-------------------------------------------------------
ma_fonction<- function(data_init, type){
fichier_init <- deparse(substitute(data_init))
if (type == "ctr") {
geom_com <- geom_com_ctr
} else if (type == "polygon") {
geom_com <- geom_com_polygon
} else {
stop("Le paramètre 'type' doit être soit 'ctr' ou 'polygon'")
}
fichier<- data_init%>%
left_join(geom_com, by ="insee_com") %>%
st_as_sf()
fichier_4326<- st_transform(fichier, crs= 4326)
return(fichier_4326)
}
#ACV
acv_geom<-ma_fonction(acv_init, type="ctr")%>%
rename("id_geo"="insee_com", "lib_geo"="lib_com.y" ,"id_territoire"="id_acv", "lib_territoire"="lib_acv")%>%
select(id_geo, lib_geo, id_territoire, lib_territoire, date_signature)%>%
group_by(id_territoire, lib_territoire, date_signature)%>%
summarise(liste_geo= paste0(unique(lib_geo),' (', id_geo, ')', collapse = '; '))
View(acv_geom)
citeduc_geom<-ma_fonction(citeduc_init, type="ctr")%>%
rename("id_geo"="insee_com", "lib_geo"="lib_com.x" ,"id_territoire"="id_cite", "lib_territoire"="lib_cite")
View(citeduc_gpt_data)
citeduc_geom<-ma_fonction(citeduc_init, type="ctr")%>%
rename("id_geo"="insee_com", "lib_geo"="lib_com.x" ,"id_territoire"="id_cite", "lib_territoire"="lib_cite")%>%
group_by(id_territoire, lib_territoire)%>%
summarise(lib_geo= paste0(unique(lib_geo)),
id_territoire= paste0(unique(id_territoire), collapse = '; '),
liste_geo= paste0(unique(lib_geo),' (', id_geo, ')', collapse = '; '),
lib_territoire= paste0(unique(lib_territoire), collapse = '; ') )
citeduc_geom<-ma_fonction(citeduc_init, type="ctr")%>%
rename("id_geo"="insee_com", "lib_geo"="lib_com.x" ,"id_territoire"="id_cite", "lib_territoire"="lib_cite")%>%
group_by(id_territoire, lib_territoire)%>%
summarise(liste_geo= paste0(unique(lib_geo),' (', id_geo, ')', collapse = '; '))
st_write(obj = citeduc_geom,
dsn = here(paste0("geom/geojsonV2/citeduc_geom.geojson")),
driver = "GeoJSON", delete_layer = TRUE, append = FALSE)
#Cité de l'emploi
cde_init <- read.csv("N:/Transverse/Donnees_Obs/Donnees_Statistiques/ANCT/cites-emploi/liste-cde-com2023-20231108.csv", fileEncoding ="utf-8")
cde_list_init<- read.csv("N:/Transverse/Donnees_Obs/Donnees_Statistiques/ANCT/cites-emploi/liste-cde-qp2023-20231108.csv", fileEncoding ="utf-8")
View(cde_init)
View(cde_list_init)
cde_data<- cde_init%>%
mutate(insee_com = ifelse(nchar(insee_com) == 4, paste0("0", insee_com), insee_com))
View(cde_data)
cde_geom <- ma_fonction(cde_init, type="ctr")%>%
rename("id_geo"="insee_com", "lib_geo"="lib_com" ,"id_territoire"="id_cde", "lib_territoire"="lib_cde")%>%
group_by(id_territoire, lib_territoire)%>%
summarise(liste_geo= paste0(unique(lib_geo),' (', id_geo, ')', collapse = '; '))
cde_geom <- ma_fonction(cde_data, type="ctr")%>%
rename("id_geo"="insee_com", "lib_geo"="lib_com" ,"id_territoire"="id_cde", "lib_territoire"="lib_cde")%>%
group_by(id_territoire, lib_territoire)%>%
summarise(liste_geo= paste0(unique(lib_geo),' (', id_geo, ')', collapse = '; '))
cde_geom <- ma_fonction(cde_data, type="ctr")%>%
rename("id_geo"="insee_com", "lib_geo"="lib_com.x" ,"id_territoire"="id_cde", "lib_territoire"="lib_cde")%>%
group_by(id_territoire, lib_territoire)%>%
summarise(liste_geo= paste0(unique(lib_geo),' (', id_geo, ')', collapse = '; '))
View(cde_geom)
st_write(obj = cde_geom,
dsn = here(paste0("geom/geojsonV2/cde_geom.geojson")),
driver = "GeoJSON", delete_layer = TRUE, append = FALSE)
st_write(obj = acv_geom,
dsn = here(paste0("geom/geojsonV2/acv_geom.geojson")),
driver = "GeoJSON", delete_layer = TRUE, append = FALSE)
library(sf)
library(rgdal)
library(tidyverse)
library(readxl)
library(writexl)
library(RSQLite)
library(here)
geom_com_ctr <- st_read("N://Transverse/Donnees_Obs/Donnees_SIG/ADMIN_STAT/map-process/public/france/2023/fr-drom/centroide-fr-drom-3395-gen.gpkg",
layer = "com")
geom_com_polygon <- st_read("N://Transverse/Donnees_Obs/Donnees_SIG/ADMIN_STAT/map-process/public/france/2023/fr-drom/fr-drom-3395-gen.gpkg",
layer = "com")
# geom_epci_polygon <- st_read("N://Transverse/Donnees_Obs/Donnees_SIG/ADMIN_STAT/map-process/public/france/2023/fr-drom/fr-drom-3395-gen.gpkg",
#                             layer = "epci")
#FRLA
frla1_init <- st_read("N:/DST/Carto/APPROCHE SECTORIELLE/FONCIER/FRLA_commerces ruraux/DATA/geom/frla1.gpkg") %>%
st_drop_geometry()
View(frla1_init)
frla2_init <- st_read("N:/DST/Carto/APPROCHE SECTORIELLE/FONCIER/FRLA_commerces ruraux/DATA/geom/frla2.gpkg") %>%
st_drop_geometry()
frla_init <- ?bind_rows()
frla_init <- ?bind_rows
frla_init <- bind_rows(frla1_init,frla2_init )
View(frla_init)
frla_init <- bind_rows(frla1_init,frla2_init)
#FRLA
frla1_init <- st_read("N:/DST/Carto/APPROCHE SECTORIELLE/FONCIER/FRLA_commerces ruraux/DATA/geom/frla1.gpkg") %>%
st_drop_geometry() %>%
mutate(phase="1")
frla2_init <- st_read("N:/DST/Carto/APPROCHE SECTORIELLE/FONCIER/FRLA_commerces ruraux/DATA/geom/frla2.gpkg") %>%
st_drop_geometry()%>%
mutate(phase="2")
frla_init <- bind_rows(frla1_init,frla2_init)
frla_init <- bind_rows(frla1_init,frla2_init) %>%
mutate(id_territoire= paste0("frla-",phase,"-",as.character((seq(1:nrow(frla_init))))))
frla_init <- bind_rows(frla1_init,frla2_init) %>%
mutate(id_territoire= paste0("frla-",phase,"-",insee_dep, "-",as.character((seq(1:nrow(frla_init))))))
frla_init <- bind_rows(frla1_init,frla2_init) %>%
arrange(insee_dep) %>%
mutate(id_territoire= paste0("frla-",phase,"-",insee_dep, "-",as.character((seq(1:nrow(frla_init))))))
frla_init <- bind_rows(frla1_init,frla2_init) %>%
mutate(id_territoire= paste0("frla-",phase,"-",insee_dep, "-",as.character((seq(1:nrow(frla_init))))))
#FRLA
frla_geom <-ma_fonction(frla__init, type="ctr")%>%
rename("id_geo"="insee_com", "lib_geo"="lib_com" ,"lib_territoire"="PERIMETRE")%>%
group_by(id_geo, lib_geo, lib_territoire) %>%
summarise(liste_geo= paste0(unique(lib_geo),' (', id_geo, ')', collapse = '; '))
#FRLA
frla_geom <-ma_fonction(frla_init, type="ctr")%>%
rename("id_geo"="insee_com", "lib_geo"="lib_com" ,"lib_territoire"="PERIMETRE")%>%
group_by(id_geo, lib_geo, lib_territoire) %>%
summarise(liste_geo= paste0(unique(lib_geo),' (', id_geo, ')', collapse = '; '))
frla_geom <-ma_fonction(frla_init, type="ctr")
View(frla_geom)
#FRLA
frla_geom <-ma_fonction(frla_init, type="ctr")%>%
rename("id_geo"="insee_com", "lib_geo"="lib_com.y" ,"lib_territoire"="PERIMETRE")%>%
group_by(id_geo, lib_geo, lib_territoire) %>%
summarise(liste_geo= paste0(unique(lib_geo),' (', id_geo, ')', collapse = '; '))
#FRLA
frla_geom <-ma_fonction(frla_init, type="ctr")%>%
rename("id_geo"="insee_com", "lib_geo"="lib_com.y" ,"lib_territoire"="PERIMETRE")%>%
distinct(id_geo, lib_geo, lib_territoire, .keep_all = TRUE) %>%
group_by(id_geo, lib_geo, lib_territoire) %>%
summarise(liste_geo= paste0(unique(lib_geo),' (', id_geo, ')', collapse = '; '))
st_write(obj = frla_geom,
dsn = here(paste0("geom/geojsonV2/frla_geom.geojson")),
driver = "GeoJSON", delete_layer = TRUE, append = FALSE)
#FRLA
frla_geom <-ma_fonction(frla_init, type="ctr")%>%
rename("id_geo"="insee_com", "lib_geo"="lib_com.y" ,"lib_territoire"="PERIMETRE")%>%
distinct(id_geo, lib_geo, lib_territoire, .keep_all = TRUE) %>%
group_by(id_geo, lib_geo, lib_territoire, id_territoire) %>%
summarise(liste_geo= paste0(unique(lib_geo),' (', id_geo, ')', collapse = '; '))
st_write(obj = frla_geom,
dsn = here(paste0("geom/geojsonV2/frla_geom.geojson")),
driver = "GeoJSON", delete_layer = TRUE, append = FALSE)
#PAO
pao_init <- st_read("N:/DST/Carto/APPROCHE SECTORIELLE/FONCIER/PAO/DATA/geom/donnees_pao.gpkg") %>%
st_drop_geometry()
View(pao_init)
#PAO
pao_init <- st_read("N:/DST/Carto/APPROCHE SECTORIELLE/FONCIER/PAO/DATA/geom/donnees_pao.gpkg") %>%
st_drop_geometry()%>%
mutate(id_territoire= paste0("pao-",as.character((seq(1:nrow(frla_init))))))
#PAO
pao_init <- st_read("N:/DST/Carto/APPROCHE SECTORIELLE/FONCIER/PAO/DATA/geom/donnees_pao.gpkg") %>%
st_drop_geometry()%>%
mutate(id_territoire= paste0("pao-",as.character((seq(1:nrow(pao_init))))))
#PAO
pao_init <- st_read("N:/DST/Carto/APPROCHE SECTORIELLE/FONCIER/PAO/DATA/geom/donnees_pao.gpkg") %>%
st_drop_geometry()%>%
mutate(id_territoire= paste0("pao-",numero,"-",as.character((seq(1:nrow(pao_init))))))
#PAO
pao_init <- st_read("N:/DST/Carto/APPROCHE SECTORIELLE/FONCIER/PAO/DATA/geom/donnees_pao.gpkg") %>%
st_drop_geometry()%>%
mutate(id_territoire= paste0("pao-",numero,"-",type,"-",as.character((seq(1:nrow(pao_init))))))
#PAO
pao_geom<-ma_fonction(pao_init, type="ctr")%>%
rename("id_geo"="insee_com", "lib_geo"="lib_com.y" , "lib_territoire"="lib_com.y")%>%
select(id_geo, lib_geo, id_territoire, lib_territoire, date_signature)%>%
group_by(id_territoire, lib_territoire, date_signature)%>%
summarise(liste_geo= paste0(unique(lib_geo),' (', id_geo, ')', collapse = '; '))
#PAO
pao_geom<-ma_fonction(pao_init, type="ctr")%>%
rename("id_geo"="insee_com", "lib_geo"="lib_com" , "lib_territoire"="lib_com.y")%>%
select(id_geo, lib_geo, id_territoire, lib_territoire, date_signature)%>%
group_by(id_territoire, lib_territoire, date_signature)%>%
summarise(liste_geo= paste0(unique(lib_geo),' (', id_geo, ')', collapse = '; '))
pao_geom<-ma_fonction(pao_init, type="ctr")
View(frla_geom)
View(pao_geom)
pao_geom<-ma_fonction(pao_init, type="ctr")%>%
rename("id_geo"="insee_com", "lib_geo"="lib_com.y" , "lib_territoire"="lib_com.y")
#PAO
pao_geom<-ma_fonction(pao_init, type="ctr")%>%
rename("id_geo"="insee_com", "lib_geo"="lib_com.y" , "lib_territoire"="lib_com.y")%>%
group_by(id_territoire, lib_territoire, id_territoire)%>%
summarise(liste_geo= paste0(unique(lib_geo),' (', id_geo, ')', collapse = '; '))
#PAO
pao_geom<-ma_fonction(pao_init, type="ctr")%>%
rename("id_geo"="insee_com", "lib_geo"="lib_com.y" , "lib_territoire"="lib_com.y")%>%
group_by(id_territoire, lib_territoire, id_territoire)%>%
summarise()
#PAO
pao_geom<-ma_fonction(pao_init, type="ctr")%>%
rename("id_geo"="insee_com", "lib_geo"="lib_com.y" , "lib_territoire"="lib_com.y")%>%
select(id_geo,lib_geo,lib_territoire, id_territoire) %>%
group_by(id_territoire, lib_territoire)%>%
summarise(liste_geo= paste0(unique(lib_geo),' (', id_geo, ')', collapse = '; '))
#PAO
pao_geom<-ma_fonction(pao_init, type="ctr")%>%
rename("id_geo"="insee_com", "lib_geo"="lib_com.y" , "lib_territoire"="lib_com.y")%>%
select(id_geo,lib_geo,lib_territoire, id_territoire) %>%
group_by(id_territoire,lib_geo, lib_territoire)%>%
summarise(liste_geo= paste0(unique(lib_geo),' (', id_geo, ')', collapse = '; '))
pao_geom<-ma_fonction(pao_init, type="ctr")%>%
rename("id_geo"="insee_com", "lib_geo"="lib_com.y" , "lib_territoire"="lib_com.y")%>%
select(id_geo,lib_geo,lib_territoire, id_territoire)
pao_geom<-ma_fonction(pao_init, type="ctr")%>%
rename("id_geo"="insee_com", "lib_geo"="lib_com.y" , "lib_territoire"="lib_com.y")
#PAO
pao_geom<-ma_fonction(pao_init, type="ctr")%>%
rename("id_geo"="insee_com", "lib_geo"="lib_com.x" , "lib_territoire"="lib_com.y")%>%
select(id_geo,lib_geo,lib_territoire, id_territoire) %>%
group_by(id_territoire,lib_geo, lib_territoire)%>%
summarise(liste_geo= paste0(unique(lib_geo),' (', id_geo, ')', collapse = '; '))
st_write(obj = pao_geom,
dsn = here(paste0("geom/geojsonV2/pao_geom.geojson")),
driver = "GeoJSON", delete_layer = TRUE, append = FALSE)
#Fonds commerce
comru_init <- st_read("N:/DST/Carto/APPROCHE SECTORIELLE/FONCIER/FRLA_commerces ruraux/DATA/geom/com_ruraux.gpkg") %>%
st_drop_geometry()
#Telecharger les librairie
library(sf)
library(rgdal)
library(tidyverse)
library(readxl)
library(writexl)
library(RSQLite)
library(here)
geom_com_ctr <- st_read("N://Transverse/Donnees_Obs/Donnees_SIG/ADMIN_STAT/map-process/public/france/2023/fr-drom/centroide-fr-drom-3395-gen.gpkg",
layer = "com")
geom_com_polygon <- st_read("N://Transverse/Donnees_Obs/Donnees_SIG/ADMIN_STAT/map-process/public/france/2023/fr-drom/fr-drom-3395-gen.gpkg",
layer = "com")
# geom_epci_polygon <- st_read("N://Transverse/Donnees_Obs/Donnees_SIG/ADMIN_STAT/map-process/public/france/2023/fr-drom/fr-drom-3395-gen.gpkg",
#                             layer = "epci")
#Fonds commerce
comru_init <- st_read("N:/DST/Carto/APPROCHE SECTORIELLE/FONCIER/FRLA_commerces ruraux/DATA/geom/com_ruraux.gpkg") %>%
st_drop_geometry()
#TRANSFORMER LES DONNEES - creation d'une fonction-------------------------------------------------------
ma_fonction<- function(data_init, type){
fichier_init <- deparse(substitute(data_init))
if (type == "ctr") {
geom_com <- geom_com_ctr
} else if (type == "polygon") {
geom_com <- geom_com_polygon
} else {
stop("Le paramètre 'type' doit être soit 'ctr' ou 'polygon'")
}
fichier<- data_init%>%
left_join(geom_com, by ="insee_com") %>%
st_as_sf()
fichier_4326<- st_transform(fichier, crs= 4326)
return(fichier_4326)
}
View(comru_init)
#PAO
pao_init <- st_read("N:/DST/Carto/APPROCHE SECTORIELLE/FONCIER/PAO/DATA/geom/donnees_pao.gpkg") %>%
st_drop_geometry()%>%
rename("numero"="N.")
pao_init
#Fonds commerce
comru_init <- st_read("N:/DST/Carto/APPROCHE SECTORIELLE/FONCIER/FRLA_commerces ruraux/DATA/geom/com_ruraux.gpkg") %>%
st_drop_geometry()%>%
rename("numero"="N.")
#Fonds commerce
comru_init <- st_read("N:/DST/Carto/APPROCHE SECTORIELLE/FONCIER/FRLA_commerces ruraux/DATA/geom/com_ruraux.gpkg") %>%
st_drop_geometry()%>%
rename("numero"="N.") %>%
mutate(type=str_split(service, "-", simplify = TRUE)[, 2])
#Fonds commerce
comru_init <- st_read("N:/DST/Carto/APPROCHE SECTORIELLE/FONCIER/FRLA_commerces ruraux/DATA/geom/com_ruraux.gpkg") %>%
st_drop_geometry()%>%
rename("numero"="N.") %>%
mutate(type=str_split(service, "-", simplify = TRUE)[, 2]) %>%
mutate(id_territoire= paste0("comru-",numero,"-",type, "-",as.character((seq(1:nrow(pao_init))))))
#Fonds commerce
comru_init <- st_read("N:/DST/Carto/APPROCHE SECTORIELLE/FONCIER/FRLA_commerces ruraux/DATA/geom/com_ruraux.gpkg") %>%
st_drop_geometry()%>%
rename("numero"="N.") %>%
mutate(type=str_split(service, "-", simplify = TRUE)[, 2]) %>%
mutate(id_territoire= paste0("comru-",numero,"-",type, "-",as.character((seq(1:nrow(comru_init))))))
comru_geom <- ma_fonction(comru_init,type="ctr")%>%
rename("id_geo"="insee_com", "lib_geo"="lib_com.y" ,"lib_territoire"="lib_com.x")
View(comru_geom)
comru_geom
test <- comru_geom %>%
select(Commune.du.Projet, lib_com_carto.x, insee_dep.x)
View(test)
View(acv_geom)
