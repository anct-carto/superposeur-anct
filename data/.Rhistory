#Telecharger les librairie
library(sf)
library(dyplr)
library(here)
#Lire les programmes :
acv_init <- st_read(here("geom/gpkg/acv-cog2023.gpkg"))
acv_init <- st_read("N:/Transverse/Donnees_Obs/Donnees_Statistiques/ANCT/action-coeur-de-ville/liste-acv-com2023-20230802.csv")
View(acv_init)
geom_com <- st_read("N://Transverse/Donnees_Obs/Donnees_SIG/ADMIN_STAT/map-process/public/france/2023/fr-drom/centroide-fr-drom-3395-gen.gpkg",
layer = "com")
acv <- acv_init%>%
left_join(geom_com, by="insee_com")
#Telecharger les librairie
library(sf)
library(rgdal)
library(tidyverse)
library(readxl)
library(writexl)
library(RSQLite)
library(here)
geom_com <- st_read("N://Transverse/Donnees_Obs/Donnees_SIG/ADMIN_STAT/map-process/public/france/2023/fr-drom/centroide-fr-drom-3395-gen.gpkg",
layer = "com")
acv_init <- st_read(here("geom/gpkg/acv-cog2023.gpkg"))
acv_init <- st_read("N:/Transverse/Donnees_Obs/Donnees_Statistiques/ANCT/action-coeur-de-ville/liste-acv-com2023-20230802.csv")
acv <- acv_init%>%
left_join(geom_com, by="insee_com")
View(acv)
plot(acv$geom)
acv <- acv_init%>%
left_join(geom_com, by="insee_com")%>%
st_crs('4326')
acv <- acv_init%>%
left_join(geom_com, by="insee_com")%>%
st_crs('4326')
st_crs(acv)
acv_4326<- st_transform(acv, crs=4326)
acv <- acv_init%>%
left_join(geom_com, by="insee_com")%>%
st_as_sf()
acv_4326<- st_transform(acv, crs=4326)
View(acv_4326)
plot(acv_4326$geom)
st_write(obj = acv_4326,
dsn = here("geom/geojson/acv_4326.geojson"),
driver = "GeoJSON", delete_layer = T, append = F)
#Avenir montagne mobilité
amm_init <- read.csv("N:/Transverse/Donnees_Obs/Donnees_Statistiques/ANCT/avenir-montagnes-mobilites/liste-amm-com2023-20230810.csv", fileEncoding ="utf-8")
amm_init_list <- read.csv("N:/Transverse/Donnees_Obs/Donnees_Statistiques/ANCT/avenir-montagnes-mobilites/liste-amm-20230810.csv", fileEncoding ="utf-8")
#TRANSFORMER LES DONNEES - creation d'une fonction-------------------------------------------------------
ma_fonction<- function(data_init, type){
fichier_init <- deparse(substitute(data_init))
if (type == "ctr") {
geom_com <- geom_com_ctr
} else if (type == "polygon") {
geom_com <- geom_com_polygon
} else {
stop("Le paramètre 'type' doit être soit 'ctr' ou 'polygon'")
}
fichier<- data_init%>%
left_join(geom_com, by ="insee_com") %>%
st_as_sf()
fichier_4326<- st_transform(fichier, crs= 4326)
st_write(obj = fichier_4326,
dsn = here(paste0("geom/geojson/", fichier_init, "_geom.geojson")),
driver = "GeoJSON", delete_layer = TRUE, append = FALSE)
return(fichier_4326)
}
return(fichier_4326)
return(fichier_4326)
#TRANSFORMER LES DONNEES - creation d'une fonction-------------------------------------------------------
ma_fonction<- function(data_init, type){
fichier_init <- deparse(substitute(data_init))
if (type == "ctr") {
geom_com <- geom_com_ctr
} else if (type == "polygon") {
geom_com <- geom_com_polygon
} else {
stop("Le paramètre 'type' doit être soit 'ctr' ou 'polygon'")
}
fichier<- data_init%>%
left_join(geom_com, by ="insee_com") %>%
st_as_sf()
fichier_4326<- st_transform(fichier, crs= 4326)
return(fichier_4326)
}
amm_geom<-ma_fonction(amm_init, type="polygon")%>%
separate_rows(id_amm, sep = " ; ") %>%
group_by(id_amm) %>%
summarise()
amm_geom<-ma_fonction(amm_init, type="polygon")%>%
separate_rows(id_amm, sep = " ; ") %>%
group_by(id_amm) %>%
summarise()
#Telecharger les librairie
library(sf)
library(rgdal)
library(tidyverse)
library(readxl)
library(writexl)
library(RSQLite)
library(here)
geom_com_ctr <- st_read("N://Transverse/Donnees_Obs/Donnees_SIG/ADMIN_STAT/map-process/public/france/2023/fr-drom/centroide-fr-drom-3395-gen.gpkg",
layer = "com")
geom_com_polygon <- st_read("N://Transverse/Donnees_Obs/Donnees_SIG/ADMIN_STAT/map-process/public/france/2023/fr-drom/fr-drom-3395-gen.gpkg",
layer = "com")
#ACV
acv_init <- read.csv("N:/Transverse/Donnees_Obs/Donnees_Statistiques/ANCT/action-coeur-de-ville/liste-acv-com2023-20230802.csv", fileEncoding ="utf-8" )
#PVD
pvd_init <- read.csv("N:/Transverse/Donnees_Obs/Donnees_Statistiques/ANCT/petites-villes-de-demain/liste-pvd-com2023-20231005.csv", fileEncoding ="utf-8")
#TI
ti_init <- read.csv("N:/Transverse/Donnees_Obs/Donnees_Statistiques/ANCT/territoires-industrie/liste-ti-com2023-20230802.csv", fileEncoding ="utf-8")
#France service
fs_init <- read.csv("N:/Transverse/Donnees_Obs/Donnees_Statistiques/ANCT/france_services/liste-fs-com2023-20230816.csv", fileEncoding ="utf-8")
#Avenir montagne mobilité
amm_init <- read.csv("N:/Transverse/Donnees_Obs/Donnees_Statistiques/ANCT/avenir-montagnes-mobilites/liste-amm-com2023-20230810.csv", fileEncoding ="utf-8")
amm_init_list <- read.csv("N:/Transverse/Donnees_Obs/Donnees_Statistiques/ANCT/avenir-montagnes-mobilites/liste-amm-20230810.csv", fileEncoding ="utf-8")
#Avenir montagne ingénierie
ami_init <- read.csv("N:/Transverse/Donnees_Obs/Donnees_Statistiques/ANCT/avenir-montagnes-ingenierie/liste-ami-com2023-20230830.csv", fileEncoding ="utf-8")
ami_init_list <- read.csv("N:/Transverse/Donnees_Obs/Donnees_Statistiques/ANCT/avenir-montagnes-ingenierie/liste-ami-20230830.csv", fileEncoding ="utf-8")
#CRTE
crte_init<-read.csv("N:/Transverse/Donnees_Obs/Donnees_Statistiques/ANCT/contrats-de-relance-et-de-transition-ecologique/liste-crte-com2023-20230823.csv", fileEncoding ="utf-8")
crte_init_list<-read.csv("N:/Transverse/Donnees_Obs/Donnees_Statistiques/ANCT/contrats-de-relance-et-de-transition-ecologique/liste-crte-20230823.csv", fileEncoding ="utf-8")
#Cité educatives
cite_init <- read.csv("N:/Transverse/Donnees_Obs/Donnees_Statistiques/ANCT/cites-educatives/liste-cite-com2023-20230817.csv", fileEncoding ="utf-8")
#FABRIQUE PROSPECTIVES
fabp_init <- read.csv("N:/Transverse/Donnees_Obs/Donnees_Statistiques/ANCT/fabriques-prospectives/liste-fabp-com2023-20231005.csv", fileEncoding ="utf-8")
#TRANSFORMER LES DONNEES - creation d'une fonction-------------------------------------------------------
ma_fonction<- function(data_init, type){
fichier_init <- deparse(substitute(data_init))
if (type == "ctr") {
geom_com <- geom_com_ctr
} else if (type == "polygon") {
geom_com <- geom_com_polygon
} else {
stop("Le paramètre 'type' doit être soit 'ctr' ou 'polygon'")
}
fichier<- data_init%>%
left_join(geom_com, by ="insee_com") %>%
st_as_sf()
fichier_4326<- st_transform(fichier, crs= 4326)
return(fichier_4326)
}
#LANCEMENT FONCTION ET EXPORT DES DONNEES-------------------------------------------------------
acv_geom<-ma_fonction(acv_init, type="ctr")
amm_geom<-ma_fonction(amm_init, type="polygon")%>%
separate_rows(id_amm, sep = " ; ") %>%
group_by(id_amm) %>%
summarise()
amm_geom <- left_join(amm_geom, amm_init_list, by = "id_amm")
st_write(obj = amm_geom,
dsn = here(paste0("geom/geojson/amm_geom.geojson")),
driver = "GeoJSON", delete_layer = TRUE, append = FALSE)
stop("Le paramètre 'type' doit être soit 'ctr' ou 'polygon'")
#LANCEMENT FONCTION ET EXPORT DES DONNEES-------------------------------------------------------
acv_geom<-ma_fonction(acv_init, type="ctr")
st_write(obj = acv_geom,
dsn = here(paste0("geom/geojson/acv_geom.geojson")),
driver = "GeoJSON", delete_layer = TRUE, append = FALSE)
pvd_geom<-ma_fonction(pvd_init, type="ctr")
pvd_geom<-ma_fonction(pvd_init, type="ctr")
st_write(obj = pvd_geom,
dsn = here(paste0("geom/geojson/pvd_geom.geojson")),
driver = "GeoJSON", delete_layer = TRUE, append = FALSE)
fs_geom<-ma_fonction(fs_init, type="ctr")
st_write(obj = fs_geom,
dsn = here(paste0("geom/geojson/fs_geom.geojson")),
driver = "GeoJSON", delete_layer = TRUE, append = FALSE)
ti_geom<-ma_fonction(ti_init, type="polygon")%>%
group_by(id_ti, lib_ti) %>%
summarise()
ti_geom<-ma_fonction(ti_init, type="polygon")%>%
group_by(id_ti, lib_ti) %>%
summarise()
st_write(obj = ti_geom,
dsn = here(paste0("geom/geojson/ti_geom.geojson")),
driver = "GeoJSON", delete_layer = TRUE, append = FALSE)
amm_geom<-ma_fonction(amm_init, type="polygon")%>%
separate_rows(id_amm, sep = " ; ") %>%
group_by(id_amm) %>%
summarise()
amm_geom <- left_join(amm_geom, amm_init_list, by = "id_amm")
st_write(obj = amm_geom,
dsn = here(paste0("geom/geojson/amm_geom.geojson")),
driver = "GeoJSON", delete_layer = TRUE, append = FALSE)
st_write(obj = ami_geom,
dsn = here(paste0("geom/geojson/ami_geom.geojson")),
driver = "GeoJSON", delete_layer = TRUE, append = FALSE)
ami_geom<-ma_fonction(ami_init, type="polygon")%>%
separate_rows(id_ami, sep = " ; ") %>%
group_by(id_ami) %>%
summarise()
ami_geom <- left_join(ami_geom, ami_init_list, by = "id_ami")
st_write(obj = ami_geom,
dsn = here(paste0("geom/geojson/ami_geom.geojson")),
driver = "GeoJSON", delete_layer = TRUE, append = FALSE)
crte_geom<-ma_fonction(crte_init, type="polygon")%>%
separate_rows(id_crte, sep = " ; ") %>%
group_by(id_crte) %>%
summarise()
crte_geom <- left_join(crte_geom, crte_init_list, by = "id_crte")
st_write(obj = crte_geom,
dsn = here(paste0("geom/geojson/crte_geom.geojson")),
driver = "GeoJSON", delete_layer = TRUE, append = FALSE)
ami_geom<-ma_fonction(ami_init, type="polygon")%>%
separate_rows(id_ami, sep = " ; ") %>%
group_by(id_ami) %>%
summarise()
ami_geom <- left_join(ami_geom, ami_init_list, by = "id_ami")
st_write(obj = ami_geom,
dsn = here(paste0("geom/geojson/ami_geom.geojson")),
driver = "GeoJSON", delete_layer = TRUE, append = FALSE)
#Telecharger les librairie
library(sf)
library(rgdal)
library(tidyverse)
library(readxl)
library(writexl)
library(RSQLite)
library(here)
reg_geom <- st_read("N://Transverse/Donnees_Obs/Donnees_SIG/ADMIN_STAT/map-process/public/france/2023/fr-drom/fr-drom-3395-gen.gpkg",
layer = "reg")
View(reg_geom)
View(reg_geom)
reg_geom_4326<- st_transform(reg_geom, crs= 4326)
plot(geom$reg_geom)
plot(reg_geom$geom)
plot(reg_geom_4326$geom)
st_write(obj = reg_geom_4326,
dsn = here(paste0("geom/geojson/reg_geom_4326.geojson")),
driver = "GeoJSON", delete_layer = TRUE, append = FALSE)
View(reg_geom_4326)
View(reg_geom)
View(reg_geom_4326)
plot(reg_geom$geom)
plot(reg_geom_4326$geom)
#Telecharger les librairie
library(sf)
library(rgdal)
library(tidyverse)
library(readxl)
library(writexl)
library(RSQLite)
library(here)
dep_geom <- st_read("N://Transverse/Donnees_Obs/Donnees_SIG/ADMIN_STAT/map-process/public/france/2023/fr-drom/fr-drom-3395-gen.gpkg",
layer = "dep")
dep_geom_4326<- st_transform(dep_geom, crs= 4326)
plot(dep_geom$geom)
plot(dep_geom_4326$geom)
st_write(obj = dep_geom_4326,
dsn = here(paste0("geom/geojson/dep_geom_4326.geojson")),
driver = "GeoJSON", delete_layer = TRUE, append = FALSE)
#Telecharger les librairie
library(sf)
library(rgdal)
library(tidyverse)
library(readxl)
library(writexl)
library(RSQLite)
library(here)
geom_com_ctr <- st_read("N://Transverse/Donnees_Obs/Donnees_SIG/ADMIN_STAT/map-process/public/france/2023/fr-drom/centroide-fr-drom-3395-gen.gpkg",
layer = "com")
geom_com_polygon <- st_read("N://Transverse/Donnees_Obs/Donnees_SIG/ADMIN_STAT/map-process/public/france/2023/fr-drom/fr-drom-3395-gen.gpkg",
layer = "com")
#ACV2
acv2_init <- st_read("N:/Transverse/Donnees_Obs/Donnees_Statistiques/ANCT/action-coeur-de-ville-2/liste-acv2-com2023-20230922.csv", fileEncoding ="utf-8" )
View(acv2_init)
#ACV2
acv2_init <- st_read("N:/Transverse/Donnees_Obs/Donnees_Statistiques/ANCT/action-coeur-de-ville-2/liste-acv2-com2023-20230922.csv" )
View(acv2_init)
#ACV2
acv2_init <- st_read("N:/Transverse/Donnees_Obs/Donnees_Statistiques/ANCT/action-coeur-de-ville-2/liste-acv2-com2023-20230922.csv", fileEncoding ="utf-8" )
#ACV2
acv2_init <- read.csv("N:/Transverse/Donnees_Obs/Donnees_Statistiques/ANCT/action-coeur-de-ville-2/liste-acv2-com2023-20230922.csv", fileEncoding ="utf-8" )
View(acv2_init)
#TRANSFORMER LES DONNEES - creation d'une fonction-------------------------------------------------------
ma_fonction<- function(data_init, type){
fichier_init <- deparse(substitute(data_init))
if (type == "ctr") {
geom_com <- geom_com_ctr
} else if (type == "polygon") {
geom_com <- geom_com_polygon
} else {
stop("Le paramètre 'type' doit être soit 'ctr' ou 'polygon'")
}
fichier<- data_init%>%
left_join(geom_com, by ="insee_com") %>%
st_as_sf()
fichier_4326<- st_transform(fichier, crs= 4326)
return(fichier_4326)
}
acv2_geom<-ma_fonction(acv2_init, type="ctr")
st_write(obj = acv2_geom,
dsn = here(paste0("geom/geojson/acv2_geom.geojson")),
driver = "GeoJSON", delete_layer = TRUE, append = FALSE)
View(acv2_init)
#Cité educatives
cite_init <- read.csv("N:/Transverse/Donnees_Obs/Donnees_Statistiques/ANCT/cites-educatives/liste-cite-com2023-20230817.csv", fileEncoding ="utf-8")
View(cite_init)
#FABRIQUE PROSPECTIVES
fabp_init <- read.csv("N:/Transverse/Donnees_Obs/Donnees_Statistiques/ANCT/fabriques-prospectives/liste-fabp-com2023-20231005.csv", fileEncoding ="utf-8")
View(fabp_init)
fabp_init_list <- read.csv("N:/Transverse/Donnees_Obs/Donnees_Statistiques/ANCT/fabriques-prospectives/liste-fabp-20231005.csv", fileEncoding ="utf-8")
View(fabp_init_list)
fabp_geom<-ma_fonction(fabp_init, type="polygon")%>%
group_by(id_fabp, lib_fabp) %>%
summarise()
fabp_geom<-ma_fonction(fabp_init, type="polygon")%>%
separate_rows(id_fabp, sep = " ; ") %>%
group_by(id_fabp) %>%
summarise()
